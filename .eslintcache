[{"/home/dninja/Projects/github/otrust/src/index.js":"1","/home/dninja/Projects/github/otrust/src/App.js":"2","/home/dninja/Projects/github/otrust/src/reportWebVitals.js":"3","/home/dninja/Projects/github/otrust/src/context/AutoLogin.js":"4","/home/dninja/Projects/github/otrust/src/theme/theme.js":"5","/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js":"6","/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js":"7","/home/dninja/Projects/github/otrust/src/pages/Landing.js":"8","/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js":"9","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js":"10","/home/dninja/Projects/github/otrust/src/utils/index.js":"11","/home/dninja/Projects/github/otrust/src/components/AcctDash.js":"12","/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js":"13","/home/dninja/Projects/github/otrust/src/connectors/index.js":"14","/home/dninja/Projects/github/otrust/src/components/Swap/index.js":"15","/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js":"16","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js":"17","/home/dninja/Projects/github/otrust/src/components/UI/index.js":"18","/home/dninja/Projects/github/otrust/src/components/index.js":"19","/home/dninja/Projects/github/otrust/src/components/UI/Container.js":"20","/home/dninja/Projects/github/otrust/src/components/UI/Panel.js":"21","/home/dninja/Projects/github/otrust/src/components/Chart/index.js":"22","/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js":"23","/home/dninja/Projects/github/otrust/src/components/Swap/From.js":"24","/home/dninja/Projects/github/otrust/src/components/Dropdown.js":"25","/home/dninja/Projects/github/otrust/src/utils/device.js":"26","/home/dninja/Projects/github/otrust/src/components/MainHeader.js":"27","/home/dninja/Projects/github/otrust/src/components/UI/Button.js":"28"},{"size":816,"mtime":1612375444832,"results":"29","hashOfConfig":"30"},{"size":517,"mtime":1612482454513,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1612310514019,"results":"32","hashOfConfig":"30"},{"size":1464,"mtime":1612376452295,"results":"33","hashOfConfig":"30"},{"size":1563,"mtime":1612485602596,"results":"34","hashOfConfig":"30"},{"size":1284,"mtime":1612380397289,"results":"35","hashOfConfig":"30"},{"size":641,"mtime":1612482268785,"results":"36","hashOfConfig":"30"},{"size":726,"mtime":1612483929619,"results":"37","hashOfConfig":"30"},{"size":869,"mtime":1612375941823,"results":"38","hashOfConfig":"30"},{"size":1407,"mtime":1612375798696,"results":"39","hashOfConfig":"30"},{"size":1419,"mtime":1612376070070,"results":"40","hashOfConfig":"30"},{"size":3921,"mtime":1612484354164,"results":"41","hashOfConfig":"30"},{"size":1628,"mtime":1612484584388,"results":"42","hashOfConfig":"30"},{"size":574,"mtime":1612375843438,"results":"43","hashOfConfig":"30"},{"size":2862,"mtime":1612486761523,"results":"44","hashOfConfig":"30"},{"size":3199,"mtime":1612378972451,"results":"45","hashOfConfig":"30"},{"size":602,"mtime":1612378972455,"results":"46","hashOfConfig":"30"},{"size":77,"mtime":1612486005856,"results":"47","hashOfConfig":"30"},{"size":95,"mtime":1612402942747,"results":"48","hashOfConfig":"30"},{"size":757,"mtime":1612379121302,"results":"49","hashOfConfig":"30"},{"size":462,"mtime":1612456583403,"results":"50","hashOfConfig":"30"},{"size":26,"mtime":1612382748218,"results":"51","hashOfConfig":"30"},{"size":159,"mtime":1612379395588,"results":"52","hashOfConfig":"30"},{"size":341,"mtime":1612401972842,"results":"53","hashOfConfig":"30"},{"size":1876,"mtime":1612485655261,"results":"54","hashOfConfig":"30"},{"size":585,"mtime":1612456251291,"results":"55","hashOfConfig":"30"},{"size":1064,"mtime":1612482641704,"results":"56","hashOfConfig":"30"},{"size":1529,"mtime":1612485871497,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"vzbwgb",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dninja/Projects/github/otrust/src/index.js",[],["123","124"],"/home/dninja/Projects/github/otrust/src/App.js",["125"],"import { AutoLogin } from './context/AutoLogin'\nimport { ThemeProvider } from 'styled-components'\n\nimport { light } from 'theme/theme'\nimport { GlobalStyle } from 'theme/GlobalStyle'\nimport NOMTrust from 'pages/NOMTrust'\nimport MainHeader from 'components/MainHeader'\nimport logo from 'assets/logo.png'\n\nfunction App() {\n  return (\n    <AutoLogin>\n      <ThemeProvider theme={light}>\n        <GlobalStyle/>\n        <MainHeader/>\n        <NOMTrust/>\n      </ThemeProvider>\n    </AutoLogin>\n  );\n}\n\nexport default App;\n","/home/dninja/Projects/github/otrust/src/reportWebVitals.js",[],"/home/dninja/Projects/github/otrust/src/context/AutoLogin.js",[],"/home/dninja/Projects/github/otrust/src/theme/theme.js",[],"/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js",[],"/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js",[],"/home/dninja/Projects/github/otrust/src/pages/Landing.js",[],"/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js",["126"],"import { useState, useEffect } from \"react\"\nimport { useWeb3React } from \"@web3-react/core\"\n\nimport { injected } from \"../connectors\"\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      console.log(\"useEagerConnect:\", { active, isAuthorized })\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js",[],"/home/dninja/Projects/github/otrust/src/utils/index.js",[],"/home/dninja/Projects/github/otrust/src/components/AcctDash.js",["127","128"],"import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatEther } from '@ethersproject/units'\nimport styled from 'styled-components'\nimport {borderWidth, borderRadius} from 'context/responsive/cssSizes'\n\nimport { Panel } from 'components/UI'\n\nfunction ChainId() {\n    const { chainId } = useWeb3React()\n  \n    return (\n      <>\n        <span>Chain Id</span>\n        <span>{chainId ?? ''}</span>\n      </>\n    )\n  }\n  \nfunction BlockNumber() {\n  const { chainId, library } = useWeb3React()\n\n  const [blockNumber, setBlockNumber] = React.useState()\n  React.useEffect(() => {\n    if (!!library) {\n      let stale = false\n\n      library\n        .getBlockNumber()\n        .then((blockNumber) => {\n          if (!stale) {\n            setBlockNumber(blockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBlockNumber(null)\n          }\n        })\n\n      const updateBlockNumber = (blockNumber) => {\n        setBlockNumber(blockNumber)\n      }\n      library.on('block', updateBlockNumber)\n\n      return () => {\n        stale = true\n        library.removeListener('block', updateBlockNumber)\n        setBlockNumber(undefined)\n      }\n    }\n  }, [library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Block Number</span>\n      <span>{blockNumber === null ? 'Error' : blockNumber ?? ''}</span>\n    </>\n  )\n}\n\nfunction Account() {\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <span>Account</span>\n      <span>\n        {account === null\n          ? '-'\n          : account\n          ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction Balance() {\n  const { account, library, chainId } = useWeb3React()\n\n  const [balance, setBalance] = React.useState()\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false\n\n      library\n        .getBalance(account)\n        .then((balance: any) => {\n          if (!stale) {\n            setBalance(balance)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBalance(null)\n          }\n        })\n\n      return () => {\n        stale = true\n        setBalance(undefined)\n      }\n    }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>ETH Balance</span>\n      <span>{balance === null ? 'Error' : balance ? `${formatEther(balance)}` : ''}</span>\n      <span>NOM Balance</span>\n      <span>{balance === null ? 'Error' : balance ? `${formatEther(balance)}` : ''}</span>\n    </>\n  )\n}\n\nconst AcctHeader = styled.header`\n  font-size: 1.4rem;\n  color: #fff;\n  margin-bottom: 1rem;\n  height: 3rem;\n  line-height: 3rem;\n  background: ${props => props.theme.colors.headerBackground};\n  text-align: center;\n  vertical-align: middle;\n  border-radius: ${borderRadius};\n`\n\nconst FlexWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst ContentWrapper = styled.div`\n  display: 'grid',\n  gridGap: '1rem',\n  gridTemplateColumns: '1fr 1fr',\n  maxWidth: '20rem',\n  lineHeight: '2rem',\n  margin: 'auto'\n`\n\nexport default function AcctDash() {\n  const { active, error } = useWeb3React()\n\n  return (\n    <FlexWrapper>\n      <Panel>\n        <AcctHeader>\n          Account\n        </AcctHeader>\n        <div\n          style={{\n            display: 'grid',\n            gridGap: '1rem',\n            gridTemplateColumns: '1fr 1fr',\n            maxWidth: '20rem',\n            lineHeight: '2rem',\n            margin: 'auto'\n          }}\n        >\n          <span>Connection</span> \n          <span>{active ? '🟢' : error ? '🔴' : '🟠'}</span>    \n          <ChainId />\n          <BlockNumber />\n          <Account />\n          <Balance />\n        </div>\n      </Panel>\n      </FlexWrapper>\n  )\n}","/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js",["129"],"import React, { useState } from \"react\";\nimport ZoomableLineChart from \"./D3LineChart\";\nimport { Panel } from \"components/UI\"\nimport styled from 'styled-components'\nimport {borderWidth, borderRadius} from 'context/responsive/cssSizes'\n\nconst ChartWrapper = styled.div`\n    height: 100%;\n    min-width: 30rem;\n    max-width: 50rem;\n    flex-basis: auto; /* default value */\n    flex-grow: 1;\n`\n\nconst a = 100000000\n\nfunction SupplyToEth(supply) {\n    return (supply/a)**2\n}\n\nfunction supplyToArray(supBegin, supEnd) {\n    var dataArray = []\n    const dif = supEnd - supBegin\n    const n = 100\n    for (var i = 0; i < n; i++) {\n        dataArray.push(\n            { \n                x: supBegin + dif*i/n,\n                y: SupplyToEth(supBegin + dif*i/n)\n            }\n        );\n    }\n    return dataArray\n}\n\nconst ChartHeader = styled.header`\n  font-size: 1.4rem;\n  color: #fff;\n  margin-bottom: 1rem;\n  height: 3rem;\n  line-height: 3rem;\n  background: ${props => props.theme.colors.headerBackground};\n  text-align: center;\n  vertical-align: middle;\n  border-radius: ${borderRadius};\n`\n\nexport default function D3Chart() {\n    const [data, setData] = useState(\n        supplyToArray(0, 100000000)\n    )\n    \n    return (\n        <ChartWrapper>\n            <Panel>\n                <ChartHeader>\n                    Bonding Curve\n                </ChartHeader>\n                <ZoomableLineChart data={data} />\n                <button\n                    onClick={() => setData(supplyToArray(0, 10000000))}\n                >\n                    Zoom\n                </button>\n            </Panel>\n        </ChartWrapper>\n    )\n}","/home/dninja/Projects/github/otrust/src/connectors/index.js",[],"/home/dninja/Projects/github/otrust/src/components/Swap/index.js",["130"],"/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js",["131","132","133"],"import React, { useRef, useEffect, useState } from \"react\";\nimport {\n  extent,\n  select,\n  scaleLinear,\n  line,\n  max,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n  zoomTransform\n} from \"d3\";\nimport { useResizeObserver } from \"./utils\";\nimport styled from \"styled-components\";\n\n\nconst StyledSVG = styled.svg`\n    display: block;\n    width: 100%;\n    height: 400px;\n    overflow: visible;\n`\n\n\n/**\n * Component that renders a ZoomableLineChart\n */\n\nfunction ZoomableLineChart({ data, id = \"myZoomableLineChart\" }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const svgContent = svg.select(\".content\");\n\n    // X and Y data arrays\n    const xDataArray = data.map(item => item.x)\n    const yDataArray = data.map(item => item.y)\n\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    function xValue(d) { return d.x; }      // accessors\n    function yValue(d) { return d.y; }\n\n    // scales + line generator\n    const xScale = scaleLinear()\n      .domain(extent(data, xValue))\n      .range([10, width - 10]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear()\n      .domain(extent(data, yValue))\n      .range([height - 10, 10]);\n\n    // Temporary\n    if (currentZoomState) {\n        const newYScale = currentZoomState.rescaleY(yScale);\n        yScale.domain(newYScale.domain());\n    }\n    \n    var lineGenerator = line()\n      .x(d => xScale(d.x))\n      .y(d => yScale(d.y)) // apply the y scale to the y data\n      .curve(curveCardinal);\n\n    // render the line\n    svgContent\n      .selectAll(\".myLine\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", lineGenerator);\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis);\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n\n    // zoom\n    const zoomBehavior = zoom()\n      .scaleExtent([0.5, 5])\n      .translateExtent([\n        [0, 0],\n        [width, height]\n      ])\n      .on(\"zoom\", () => {\n        const zoomState = zoomTransform(svg.node());\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.call(zoomBehavior);\n  }, [currentZoomState, data, dimensions]);\n\n  return (\n    <React.Fragment>\n      <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n        <StyledSVG ref={svgRef}>\n          <defs>\n            <clipPath id={id}>\n              <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n            </clipPath>\n          </defs>\n          <g className=\"content\" clipPath={`url(#${id})`}>\n            \n          </g>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </StyledSVG>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ZoomableLineChart;","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js",["134"],"\nimport React, { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const useResizeObserver = (ref) => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n      const observeTarget = ref.current;\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }, [ref]);\n    return dimensions;\n};","/home/dninja/Projects/github/otrust/src/components/UI/index.js",[],"/home/dninja/Projects/github/otrust/src/components/index.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Container.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Panel.js",["135"],"import React from 'react'\nimport styled from 'styled-components'\nimport {borderWidth, borderRadius} from 'context/responsive/cssSizes'\n\nexport const Panel = styled.div`\n  padding: 1.5rem 2rem;  \n\n  border: ${borderWidth} solid ${props => props.theme.colors.panelBorder};\n  background-color: ${props => props.theme.colors.panel};\n  border-radius: ${borderRadius};\n\n  box-sizing: border-box;\n\n  box-shadow: 0 .625rem 1.5rem ${props => props.theme.colors.shadow};\n`","/home/dninja/Projects/github/otrust/src/components/Chart/index.js",[],"/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js",[],"/home/dninja/Projects/github/otrust/src/components/Swap/From.js",[],"/home/dninja/Projects/github/otrust/src/components/Dropdown.js",["136"],"/home/dninja/Projects/github/otrust/src/utils/device.js",[],["137","138"],"/home/dninja/Projects/github/otrust/src/components/MainHeader.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Button.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":12},{"ruleId":"147","severity":1,"message":"148","line":21,"column":6,"nodeType":"149","endLine":21,"endColumn":16,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":5,"column":9,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"143","severity":1,"message":"152","line":133,"column":7,"nodeType":"145","messageId":"146","endLine":133,"endColumn":21},{"ruleId":"143","severity":1,"message":"151","line":5,"column":9,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"143","severity":1,"message":"151","line":5,"column":9,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"143","severity":1,"message":"153","line":7,"column":3,"nodeType":"145","messageId":"146","endLine":7,"endColumn":6},{"ruleId":"143","severity":1,"message":"154","line":42,"column":11,"nodeType":"145","messageId":"146","endLine":42,"endColumn":21},{"ruleId":"143","severity":1,"message":"155","line":43,"column":11,"nodeType":"145","messageId":"146","endLine":43,"endColumn":21},{"ruleId":"143","severity":1,"message":"156","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":13},{"ruleId":"143","severity":1,"message":"156","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"151","line":3,"column":9,"nodeType":"145","messageId":"146","endLine":3,"endColumn":20},{"ruleId":"139","replacedBy":"157"},{"ruleId":"141","replacedBy":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'borderWidth' is defined but never used.","'ContentWrapper' is assigned a value but never used.","'max' is defined but never used.","'xDataArray' is assigned a value but never used.","'yDataArray' is assigned a value but never used.","'React' is defined but never used.",["159"],["160"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [activate, active]",{"range":"164","text":"165"},[577,587],"[activate, active]"]