[{"/home/dninja/Projects/github/otrust/src/index.js":"1","/home/dninja/Projects/github/otrust/src/App.js":"2","/home/dninja/Projects/github/otrust/src/reportWebVitals.js":"3","/home/dninja/Projects/github/otrust/src/context/AutoLogin.js":"4","/home/dninja/Projects/github/otrust/src/theme/theme.js":"5","/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js":"6","/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js":"7","/home/dninja/Projects/github/otrust/src/pages/Landing.js":"8","/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js":"9","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js":"10","/home/dninja/Projects/github/otrust/src/utils/index.js":"11","/home/dninja/Projects/github/otrust/src/components/AcctDash.js":"12","/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js":"13","/home/dninja/Projects/github/otrust/src/connectors/index.js":"14","/home/dninja/Projects/github/otrust/src/components/Swap/index.js":"15","/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js":"16","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js":"17","/home/dninja/Projects/github/otrust/src/components/UI/index.js":"18","/home/dninja/Projects/github/otrust/src/components/index.js":"19","/home/dninja/Projects/github/otrust/src/components/UI/Container.js":"20","/home/dninja/Projects/github/otrust/src/components/UI/Panel.js":"21","/home/dninja/Projects/github/otrust/src/components/Chart/index.js":"22","/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js":"23","/home/dninja/Projects/github/otrust/src/components/Swap/From.js":"24","/home/dninja/Projects/github/otrust/src/components/Dropdown.js":"25","/home/dninja/Projects/github/otrust/src/utils/device.js":"26"},{"size":816,"mtime":1612375444832,"results":"27","hashOfConfig":"28"},{"size":414,"mtime":1612381504876,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1612310514019,"results":"30","hashOfConfig":"28"},{"size":1464,"mtime":1612376452295,"results":"31","hashOfConfig":"28"},{"size":1563,"mtime":1612380124899,"results":"32","hashOfConfig":"28"},{"size":1284,"mtime":1612380397289,"results":"33","hashOfConfig":"28"},{"size":620,"mtime":1612459846441,"results":"34","hashOfConfig":"28"},{"size":726,"mtime":1612376531501,"results":"35","hashOfConfig":"28"},{"size":869,"mtime":1612375941823,"results":"36","hashOfConfig":"28"},{"size":1407,"mtime":1612375798696,"results":"37","hashOfConfig":"28"},{"size":1419,"mtime":1612376070070,"results":"38","hashOfConfig":"28"},{"size":3517,"mtime":1612456897340,"results":"39","hashOfConfig":"28"},{"size":1166,"mtime":1612459622644,"results":"40","hashOfConfig":"28"},{"size":574,"mtime":1612375843438,"results":"41","hashOfConfig":"28"},{"size":2142,"mtime":1612458819905,"results":"42","hashOfConfig":"28"},{"size":3199,"mtime":1612378972451,"results":"43","hashOfConfig":"28"},{"size":602,"mtime":1612378972455,"results":"44","hashOfConfig":"28"},{"size":52,"mtime":1612379632904,"results":"45","hashOfConfig":"28"},{"size":95,"mtime":1612402942747,"results":"46","hashOfConfig":"28"},{"size":757,"mtime":1612379121302,"results":"47","hashOfConfig":"28"},{"size":462,"mtime":1612456583403,"results":"48","hashOfConfig":"28"},{"size":26,"mtime":1612382748218,"results":"49","hashOfConfig":"28"},{"size":159,"mtime":1612379395588,"results":"50","hashOfConfig":"28"},{"size":341,"mtime":1612401972842,"results":"51","hashOfConfig":"28"},{"size":1729,"mtime":1612403151040,"results":"52","hashOfConfig":"28"},{"size":585,"mtime":1612456251291,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"vzbwgb",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/dninja/Projects/github/otrust/src/index.js",[],["111","112"],"/home/dninja/Projects/github/otrust/src/App.js",[],"/home/dninja/Projects/github/otrust/src/reportWebVitals.js",[],"/home/dninja/Projects/github/otrust/src/context/AutoLogin.js",[],"/home/dninja/Projects/github/otrust/src/theme/theme.js",[],"/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js",[],"/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js",["113","114","115"],"/home/dninja/Projects/github/otrust/src/pages/Landing.js",[],"/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js",["116"],"import { useState, useEffect } from \"react\"\nimport { useWeb3React } from \"@web3-react/core\"\n\nimport { injected } from \"../connectors\"\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      console.log(\"useEagerConnect:\", { active, isAuthorized })\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js",[],"/home/dninja/Projects/github/otrust/src/utils/index.js",[],"/home/dninja/Projects/github/otrust/src/components/AcctDash.js",[],"/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js",[],"/home/dninja/Projects/github/otrust/src/connectors/index.js",[],"/home/dninja/Projects/github/otrust/src/components/Swap/index.js",[],"/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js",["117","118","119"],"import React, { useRef, useEffect, useState } from \"react\";\nimport {\n  extent,\n  select,\n  scaleLinear,\n  line,\n  max,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n  zoomTransform\n} from \"d3\";\nimport { useResizeObserver } from \"./utils\";\nimport styled from \"styled-components\";\n\n\nconst StyledSVG = styled.svg`\n    display: block;\n    width: 100%;\n    height: 400px;\n    overflow: visible;\n`\n\n\n/**\n * Component that renders a ZoomableLineChart\n */\n\nfunction ZoomableLineChart({ data, id = \"myZoomableLineChart\" }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const svgContent = svg.select(\".content\");\n\n    // X and Y data arrays\n    const xDataArray = data.map(item => item.x)\n    const yDataArray = data.map(item => item.y)\n\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    function xValue(d) { return d.x; }      // accessors\n    function yValue(d) { return d.y; }\n\n    // scales + line generator\n    const xScale = scaleLinear()\n      .domain(extent(data, xValue))\n      .range([10, width - 10]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear()\n      .domain(extent(data, yValue))\n      .range([height - 10, 10]);\n\n    // Temporary\n    if (currentZoomState) {\n        const newYScale = currentZoomState.rescaleY(yScale);\n        yScale.domain(newYScale.domain());\n    }\n    \n    var lineGenerator = line()\n      .x(d => xScale(d.x))\n      .y(d => yScale(d.y)) // apply the y scale to the y data\n      .curve(curveCardinal);\n\n    // render the line\n    svgContent\n      .selectAll(\".myLine\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", lineGenerator);\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis);\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n\n    // zoom\n    const zoomBehavior = zoom()\n      .scaleExtent([0.5, 5])\n      .translateExtent([\n        [0, 0],\n        [width, height]\n      ])\n      .on(\"zoom\", () => {\n        const zoomState = zoomTransform(svg.node());\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.call(zoomBehavior);\n  }, [currentZoomState, data, dimensions]);\n\n  return (\n    <React.Fragment>\n      <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n        <StyledSVG ref={svgRef}>\n          <defs>\n            <clipPath id={id}>\n              <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n            </clipPath>\n          </defs>\n          <g className=\"content\" clipPath={`url(#${id})`}>\n            \n          </g>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </StyledSVG>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ZoomableLineChart;","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js",["120"],"\nimport React, { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const useResizeObserver = (ref) => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n      const observeTarget = ref.current;\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }, [ref]);\n    return dimensions;\n};","/home/dninja/Projects/github/otrust/src/components/UI/index.js",[],"/home/dninja/Projects/github/otrust/src/components/index.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Container.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Panel.js",["121"],"import React from 'react'\nimport styled from 'styled-components'\nimport {borderWidth, borderRadius} from 'context/responsive/cssSizes'\n\nexport const Panel = styled.div`\n  padding: 1.5rem 2rem;  \n\n  border: ${borderWidth} solid ${props => props.theme.colors.panelBorder};\n  background-color: ${props => props.theme.colors.panel};\n  border-radius: ${borderRadius};\n\n  box-sizing: border-box;\n\n  box-shadow: 0 .625rem 1.5rem ${props => props.theme.colors.shadow};\n`","/home/dninja/Projects/github/otrust/src/components/Chart/index.js",[],"/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js",[],"/home/dninja/Projects/github/otrust/src/components/Swap/From.js",[],"/home/dninja/Projects/github/otrust/src/components/Dropdown.js",[],"/home/dninja/Projects/github/otrust/src/utils/device.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":16},{"ruleId":"126","severity":1,"message":"130","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":22},{"ruleId":"126","severity":1,"message":"131","line":5,"column":24,"nodeType":"128","messageId":"129","endLine":5,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":21,"column":6,"nodeType":"134","endLine":21,"endColumn":16,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"136","line":7,"column":3,"nodeType":"128","messageId":"129","endLine":7,"endColumn":6},{"ruleId":"126","severity":1,"message":"137","line":42,"column":11,"nodeType":"128","messageId":"129","endLine":42,"endColumn":21},{"ruleId":"126","severity":1,"message":"138","line":43,"column":11,"nodeType":"128","messageId":"129","endLine":43,"endColumn":21},{"ruleId":"126","severity":1,"message":"139","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":13},{"ruleId":"126","severity":1,"message":"139","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'device' is defined but never used.","Identifier","unusedVar","'borderRadius' is defined but never used.","'gap' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'max' is defined but never used.","'xDataArray' is assigned a value but never used.","'yDataArray' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [activate, active]",{"range":"145","text":"146"},[577,587],"[activate, active]"]