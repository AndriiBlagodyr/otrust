[{"/home/dninja/Projects/github/otrust/src/index.js":"1","/home/dninja/Projects/github/otrust/src/App.js":"2","/home/dninja/Projects/github/otrust/src/reportWebVitals.js":"3","/home/dninja/Projects/github/otrust/src/context/AutoLogin.js":"4","/home/dninja/Projects/github/otrust/src/theme/theme.js":"5","/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js":"6","/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js":"7","/home/dninja/Projects/github/otrust/src/pages/Landing.js":"8","/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js":"9","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js":"10","/home/dninja/Projects/github/otrust/src/utils/index.js":"11","/home/dninja/Projects/github/otrust/src/components/AcctDash.js":"12","/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js":"13","/home/dninja/Projects/github/otrust/src/connectors/index.js":"14","/home/dninja/Projects/github/otrust/src/components/Swap/index.js":"15","/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js":"16","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js":"17","/home/dninja/Projects/github/otrust/src/components/UI/index.js":"18","/home/dninja/Projects/github/otrust/src/components/index.js":"19","/home/dninja/Projects/github/otrust/src/components/UI/Container.js":"20","/home/dninja/Projects/github/otrust/src/components/UI/Panel.js":"21","/home/dninja/Projects/github/otrust/src/components/Chart/index.js":"22","/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js":"23","/home/dninja/Projects/github/otrust/src/components/Dropdown.js":"24","/home/dninja/Projects/github/otrust/src/utils/device.js":"25","/home/dninja/Projects/github/otrust/src/components/MainHeader.js":"26","/home/dninja/Projects/github/otrust/src/components/UI/Button.js":"27","/home/dninja/Projects/github/otrust/src/lib/use-async-fn.js":"28","/home/dninja/Projects/github/otrust/src/context/SwapContext.js":"29","/home/dninja/Projects/github/otrust/src/utils/bonding.js":"30","/home/dninja/Projects/github/otrust/src/context/chain/ChainContext.js":"31"},{"size":827,"mtime":1612637398517,"results":"32","hashOfConfig":"33"},{"size":592,"mtime":1612748415142,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1612310514019,"results":"35","hashOfConfig":"33"},{"size":1464,"mtime":1612376452295,"results":"36","hashOfConfig":"33"},{"size":1563,"mtime":1612485602596,"results":"37","hashOfConfig":"33"},{"size":1284,"mtime":1612380397289,"results":"38","hashOfConfig":"33"},{"size":763,"mtime":1612567310809,"results":"39","hashOfConfig":"33"},{"size":726,"mtime":1612483929619,"results":"40","hashOfConfig":"33"},{"size":869,"mtime":1612375941823,"results":"41","hashOfConfig":"33"},{"size":1407,"mtime":1612375798696,"results":"42","hashOfConfig":"33"},{"size":1419,"mtime":1612376070070,"results":"43","hashOfConfig":"33"},{"size":2950,"mtime":1612748425610,"results":"44","hashOfConfig":"33"},{"size":2108,"mtime":1612652618680,"results":"45","hashOfConfig":"33"},{"size":574,"mtime":1612375843438,"results":"46","hashOfConfig":"33"},{"size":4442,"mtime":1612651471019,"results":"47","hashOfConfig":"33"},{"size":4026,"mtime":1612652654857,"results":"48","hashOfConfig":"33"},{"size":602,"mtime":1612378972455,"results":"49","hashOfConfig":"33"},{"size":77,"mtime":1612486005856,"results":"50","hashOfConfig":"33"},{"size":95,"mtime":1612402942747,"results":"51","hashOfConfig":"33"},{"size":757,"mtime":1612379121302,"results":"52","hashOfConfig":"33"},{"size":462,"mtime":1612456583403,"results":"53","hashOfConfig":"33"},{"size":26,"mtime":1612382748218,"results":"54","hashOfConfig":"33"},{"size":159,"mtime":1612379395588,"results":"55","hashOfConfig":"33"},{"size":1933,"mtime":1612568355370,"results":"56","hashOfConfig":"33"},{"size":585,"mtime":1612456251291,"results":"57","hashOfConfig":"33"},{"size":1027,"mtime":1612639660120,"results":"58","hashOfConfig":"33"},{"size":1529,"mtime":1612485871497,"results":"59","hashOfConfig":"33"},{"size":645,"mtime":1612491878200,"results":"60","hashOfConfig":"33"},{"size":1984,"mtime":1612748443495,"results":"61","hashOfConfig":"33"},{"size":2094,"mtime":1612638234142,"results":"62","hashOfConfig":"33"},{"size":1644,"mtime":1612750464794,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"vzbwgb",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},"/home/dninja/Projects/github/otrust/src/index.js",[],["139","140"],"/home/dninja/Projects/github/otrust/src/App.js",[],"/home/dninja/Projects/github/otrust/src/reportWebVitals.js",[],"/home/dninja/Projects/github/otrust/src/context/AutoLogin.js",[],"/home/dninja/Projects/github/otrust/src/theme/theme.js",[],"/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js",[],"/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js",[],"/home/dninja/Projects/github/otrust/src/pages/Landing.js",[],"/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js",["141"],"import { useState, useEffect } from \"react\"\nimport { useWeb3React } from \"@web3-react/core\"\n\nimport { injected } from \"../connectors\"\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      console.log(\"useEagerConnect:\", { active, isAuthorized })\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js",[],"/home/dninja/Projects/github/otrust/src/utils/index.js",[],"/home/dninja/Projects/github/otrust/src/components/AcctDash.js",[],"/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js",["142"],"import React, { useState, useEffect } from \"react\";\nimport ZoomableLineChart from \"./D3LineChart\";\nimport { Panel } from \"components/UI\"\nimport styled from 'styled-components'\nimport { borderRadius } from 'context/responsive/cssSizes'\nimport { useSwap } from 'context/SwapContext'\n\nconst ChartWrapper = styled.div`\n    height: 100%;\n    min-width: 30rem;\n    max-width: 50rem;\n    flex-basis: auto; /* default value */\n    flex-grow: 1;\n`\n\nconst a = 100000000\n\nfunction SupplyToEth(supply) {\n    return (supply/a)**2\n}\n\nfunction supplyToArray(supBegin, supEnd) {\n    var dataArray = []\n    const dif = supEnd - supBegin\n    const n = 100\n    for (var i = 0; i < n; i++) {\n        dataArray.push(\n            { \n                x: supBegin + dif*i/n,\n                y: SupplyToEth(supBegin + dif*i/n)\n            }\n        );\n    }\n    return dataArray\n}\n\nconst ChartHeader = styled.header`\n  font-size: 1.4rem;\n  color: #fff;\n  height: 3rem;\n  line-height: 3rem;\n  background: ${props => props.theme.colors.headerBackground};\n  text-align: center;\n  vertical-align: middle;\n  border-radius: ${borderRadius};\n`\n\nexport default function D3Chart() {\n    const { swapSupply } = useSwap()\n    var upperBound = 100000000\n    var lowerBound = 0\n    \n    const [data, setData] = useState(supplyToArray(lowerBound, upperBound))\n    const [areaData, setAreaData] = useState(supplyToArray(lowerBound, upperBound))\n\n    useEffect(() => {\n        if (swapSupply[1]) {\n            var digitsUpper = Math.floor(Math.log10(swapSupply[1]))\n            // upperBound = 10**(digitsUpper + 1)\n            upperBound = (Math.round(swapSupply[1]/10**digitsUpper) + 1)*10**digitsUpper\n            setData(supplyToArray(lowerBound, upperBound))\n            setAreaData(supplyToArray(swapSupply[0], swapSupply[1]))\n        }\n    },[swapSupply])\n    \n    \n    \n    return (\n        <ChartWrapper>\n            <Panel>\n                <ChartHeader>\n                    Bonding Curve\n                </ChartHeader>\n                <ZoomableLineChart data={data} areaData={areaData}/>\n            </Panel>\n        </ChartWrapper>\n    )\n}","/home/dninja/Projects/github/otrust/src/connectors/index.js",[],"/home/dninja/Projects/github/otrust/src/components/Swap/index.js",["143","144","145","146"],"import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Panel } from 'components'\nimport Dropdown from 'components/Dropdown'\nimport { borderRadius } from 'context/responsive/cssSizes'\nimport { AccentButton } from 'components/UI/Button'\nimport { useAsyncFn } from 'lib/use-async-fn'\nimport { useSwap, useUpdateSwap } from 'context/SwapContext'\n\nconst FlexWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst GridWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto 1fr;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    margin-top: 1rem;\n`\n\nconst RowWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    margin-top: 1rem;\n`\nconst StyledInput = styled.input`\n\n    width: ${p => p.width};\n    height: ${p => p.height};\n    padding-left: ${p => p.paddingLeft};\n\n    border: .1rem solid ${props => props.theme.colors.background};\n    border-radius: ${borderRadius};\n\n    font-size: 1rem;\n    \n\n    box-sizing: border-box;\n\n    ::placeholder {\n        color: ${props => props.theme.colors.background};;\n    }\n\n    &:focus {\n        outline: none;\n        color: #000;\n\n        ::placeholder {\n            color: ${props => props.theme.colors.background};\n        }\n    }\n`\n\nconst RightComponentWrapper = styled.div`\n    width: 5em;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2rem;\n`\nconst LeftComponentWrapper = styled.div`\n    width: 3em;\n    text-align: right;\n    vertical-align: middle;\n    line-height: 2rem;\n`\n\nconst MiddleComponentWrapper = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2rem;\n`\n\nconst SwapHeader = styled.header`\n  font-size: 1.4rem;\n  color: #fff;\n  margin-bottom: 1rem;\n  height: 3rem;\n  line-height: 3rem;\n  background: ${props => props.theme.colors.headerBackground};\n  text-align: center;\n  vertical-align: middle;\n  border-radius: ${borderRadius};\n`\nconst Button = styled(AccentButton)`\n    background-color: ${props => props.theme.colors.headerBackground}\n`\nexport default function Swap() {\n    const { swapDenom, swapBuyAmount, swapSellAmount } = useSwap()\n    const { setSwapBuyAmount, setSwapDenom } = useUpdateSwap()\n    const onTextChange = useCallback(evt => setSwapBuyAmount(evt.target.value), [])\n\n    const doSubmit = useCallback(\n        async evt => {\n          if (evt) evt.preventDefault()\n          if (!swapBuyAmount) return\n          try {\n            setSwapBuyAmount('')\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error(e.stack || e)\n            setSwapBuyAmount(swapBuyAmount)\n          }\n        }\n    )\n\n    const [onAsyncSubmit, isWorking, error] = useAsyncFn(doSubmit)\n\n    const onTextAreaKeyDown = e => {\n        if (e.keyCode === 13 && e.shiftKey === false) {\n          e.preventDefault()\n          onAsyncSubmit()\n        }\n    }\n\n    return (\n        <FlexWrapper>\n            <Panel>\n                <SwapHeader>\n                    Swap\n                </SwapHeader>\n                <GridWrapper>\n                <LeftComponentWrapper>\n                    From:\n                    </LeftComponentWrapper>\n                    <StyledInput\n                        value={swapBuyAmount}\n                        onChange={onTextChange}\n                        onTextAreaKeyDown={onTextAreaKeyDown}\n                        placeholder={isWorking ? \"Confirming\":\"Enter amount\"}\n                        width='10rem' \n                        height='2rem' \n                        paddingLeft='1.25rem'\n                    />\n                    <Dropdown denom={swapDenom} setDenom={setSwapDenom}/>\n                    <LeftComponentWrapper>\n                    To: \n                    </LeftComponentWrapper>\n                    <MiddleComponentWrapper>\n                        { (swapSellAmount) ? swapSellAmount.toFixed(9) : null }\n                    </MiddleComponentWrapper>\n                    <RightComponentWrapper>\n                        { swapDenom == 'NOM' ? 'ETH' : 'NOM' }\n                    </RightComponentWrapper>\n                </GridWrapper>\n                    \n                <RowWrapper>\n                    <Button>\n                        Execute\n                    </Button>\n                </RowWrapper>\n            </Panel>\n        </FlexWrapper>\n    )\n}","/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js",["147","148","149"],"import React, { useRef, useEffect, useState } from \"react\";\nimport {\n  area,\n  curve,\n  extent,\n  select,\n  scaleLinear,\n  line,\n  max,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n  zoomTransform\n} from \"d3\";\nimport { useResizeObserver } from \"./utils\";\nimport styled from \"styled-components\";\n\n\nconst StyledSVG = styled.svg`\n    display: block;\n    width: 100%;\n    height: 400px;\n    overflow: visible;\n`\n\n/**\n * Component that renders a ZoomableLineChart\n */\n\nfunction ZoomableLineChart({ data, areaData, id = \"myZoomableLineChart\" }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n  var margin = {top: 20, right: 20, bottom: 40, left: 80}\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    \n    const svg = select(svgRef.current);\n    const svgContent = svg.select(\".content\");\n\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    function xValue(d) { return d.x; }      // accessors\n    function yValue(d) { return d.y; }\n\n    // scales + line generator\n    const xScale = scaleLinear()\n      .domain(extent(data, xValue))\n      .range([margin.left, width - margin.right]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear()\n      .domain(extent(data, yValue))\n      .range([height - margin.top - margin.bottom, 10]);\n\n    // Temporary\n    if (currentZoomState) {\n        const newYScale = currentZoomState.rescaleY(yScale);\n        yScale.domain(newYScale.domain());\n    }\n    \n    var lineGenerator = line()\n      .x(d => xScale(d.x))\n      .y(d => yScale(d.y)) // apply the y scale to the y data\n      .curve(curveCardinal);\n\n    var areaGenerator = area()\n      .x(d => xScale(d.x))\n      .y0(yScale(0))\n      .y1(d => yScale(d.y))\n      .curve(curveCardinal)\n\n    // render the line\n    svgContent\n      .selectAll(\".myLine\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", lineGenerator);\n    \n    svgContent\n      .selectAll(\".mySelection\")\n      .data([areaData])\n      .join(\"path\")\n      .attr(\"class\", \"mySelection\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"fill\", \"#0e4265\")\n      .attr(\"d\", areaGenerator)\n    \n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height - margin.bottom - margin.top})`)\n      .call(xAxis);\n\n    // Add X axis label:\n    svg.append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width)\n      .attr(\"y\", height)\n      .text(\"NOM Issued\");\n\n    const yAxis = axisLeft(yScale);\n    svg\n      .select(\".y-axis\")\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(yAxis);\n    \n    // Y axis label:\n    svg.append(\"text\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 0)\n    .attr(\"x\", -margin.top)\n    .text(\"Price (ETH/NOM)\")\n\n\n    // zoom\n    const zoomBehavior = zoom()\n      .scaleExtent([0.5, 5])\n      .translateExtent([\n        [0, 0],\n        [width, height]\n      ])\n      .on(\"zoom\", () => {\n        const zoomState = zoomTransform(svg.node());\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.call(zoomBehavior);\n  }, [currentZoomState, data, dimensions]);\n\n  return (\n    <React.Fragment>\n      <div ref={wrapperRef} style={{ marginTop: \"1rem\" }}>\n        <StyledSVG ref={svgRef}>\n          <defs>\n            <clipPath id={id}>\n              <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n            </clipPath>\n          </defs>\n          <g className=\"content\" clipPath={`url(#${id})`}>\n            \n          </g>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </StyledSVG>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ZoomableLineChart;","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js",["150"],"\nimport React, { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const useResizeObserver = (ref) => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n      const observeTarget = ref.current;\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }, [ref]);\n    return dimensions;\n};","/home/dninja/Projects/github/otrust/src/components/UI/index.js",[],"/home/dninja/Projects/github/otrust/src/components/index.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Container.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Panel.js",["151"],"import React from 'react'\nimport styled from 'styled-components'\nimport {borderWidth, borderRadius} from 'context/responsive/cssSizes'\n\nexport const Panel = styled.div`\n  padding: 1.5rem 2rem;  \n\n  border: ${borderWidth} solid ${props => props.theme.colors.panelBorder};\n  background-color: ${props => props.theme.colors.panel};\n  border-radius: ${borderRadius};\n\n  box-sizing: border-box;\n\n  box-shadow: 0 .625rem 1.5rem ${props => props.theme.colors.shadow};\n`","/home/dninja/Projects/github/otrust/src/components/Chart/index.js",[],["152","153"],"/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js",[],"/home/dninja/Projects/github/otrust/src/components/Dropdown.js",[],"/home/dninja/Projects/github/otrust/src/utils/device.js",[],["154","155"],"/home/dninja/Projects/github/otrust/src/components/MainHeader.js",["156"],"import React from 'react'\nimport styled from 'styled-components'\n\nimport { Container } from 'components/UI'\nimport { headerFill, header } from 'context/responsive/cssSizes'\nimport logo from 'assets/logo.png'\n\nconst Sticker = styled.header`\n    position: sticky;\n    top: 0;\n    z-index: 10;\n`\nconst HeaderWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center\n\n    height: ${p => p.height};\n    width: 100%;\n    \n    background-color: ${props => props.theme.colors.headerBackground};\n    border-bottom: .1rem solid ${props => props.theme.colors.border};\n    \n`\nconst Filler = styled.div`\n    height: ${p => p.height};\n    width: 100%;\n    z-index: 10;\n`\nconst StyledImg = styled.img`\n    display: block;\n    margin: auto;\n`\n\nexport default function MainHeader() {\n    return (\n        <Sticker>\n            <HeaderWrapper height={header}>\n                <StyledImg src={logo} alt=\"logo\" />\n            </HeaderWrapper>\n            <Filler height={headerFill}/>\n        </Sticker>\n    )\n}","/home/dninja/Projects/github/otrust/src/components/UI/Button.js",[],"/home/dninja/Projects/github/otrust/src/lib/use-async-fn.js",[],"/home/dninja/Projects/github/otrust/src/context/SwapContext.js",["157"],"import React, { useEffect, useState, createContext, useContext } from 'react'\nimport { ETHtoNOM, NOMtoETH } from 'utils/bonding'\nimport { useChain } from 'context/chain/ChainContext'\n\nexport const SwapContext = createContext()\nexport const useSwap = () => useContext(SwapContext)\n\nexport const UpdateSwapContext = createContext()\nexport const useUpdateSwap = () => useContext(UpdateSwapContext)\n\nfunction SwapProvider ({children}) {\n    const { currSupply } = useChain()\n    const [swapBuyAmount, setSwapBuyAmount] = useState('')\n    const [swapDenom, setSwapDenom] = useState('ETH')\n    const [swapSellAmount, setSwapSellAmount] = useState(0)\n    const [swapSupply, setSwapSupply] = useState([])\n\n    const contextValue = {\n        swapBuyAmount,\n        swapDenom,\n        swapSellAmount,\n        swapSupply\n    }\n\n    const updateValue = {\n        setSwapBuyAmount,\n        setSwapDenom,\n        setSwapSellAmount,\n        setSwapSupply\n    }\n\n    useEffect(() => {\n        if (swapBuyAmount === 0) {\n            setSwapSellAmount(0)\n            setSwapSupply([currSupply, currSupply])\n        } else {\n            if (swapDenom === 'ETH') {\n                const { supplyBot, supplyTop, diff } = ETHtoNOM(swapBuyAmount, currSupply)\n                setSwapSellAmount(diff)\n                setSwapSupply([supplyBot, supplyTop])\n            } else {\n                const { supplyBot, supplyTop, diff } = NOMtoETH(swapBuyAmount, currSupply)\n                setSwapSellAmount(diff)\n                setSwapSupply([supplyBot, supplyTop])\n                console.log(\"SupplyBot NOM\", supplyBot)\n            }\n        }\n        console.log(\"Gets here\", swapSellAmount)\n    },[swapDenom, swapBuyAmount, currSupply])\n\n    return (\n        <UpdateSwapContext.Provider value = { updateValue }>\n            <SwapContext.Provider value = { contextValue } >\n                {children}\n            </SwapContext.Provider>\n        </UpdateSwapContext.Provider>\n    )\n}\n\nexport default SwapProvider","/home/dninja/Projects/github/otrust/src/utils/bonding.js",["158"],"\nconst a = 100000000\nconst priceBondCurve = .001\n\n// Bonding curve price at specified supply\nexport function supplyAtPrice(price) {\n    //#NOM Sold = sqrt(ETH/NOM) * a\n    return Math.sqrt(price) * a\n}\n\nexport function priceAtSupply(supply) {\n    return (supply/a)**2\n}\n\n// NOM supply range to ETH\nexport function NOMsupplyETH(supplyTop, supplyBot) {\n    // Integrate over curve to get amount of ETH needed to buy amount of NOM\n    // ETH = a/3((supplyNOM_Top/a)^3 - (supplyNOM_Bot/a)^3)\n    return (a/3)*((supplyTop/a)**3 - (supplyBot/a)**3)\n}\n\n// Returns Buy Quote for the purchase of NOM based on amount of ETH\n// Parameters:\n// Input\n// amount: amount of ETH\n// Output\n// output: amount of NOM\nexport function ETHtoNOM(amount, supply) {\n    const price = priceAtSupply(supply)\n    // 1. Determine supply bottom\n    // Price bottom is 1% above priceBondCurve\n    const priceBot = price * 1.01\n    const supplyBot = supplyAtPrice(priceBot);\n    // 2. Integrate over curve, and solve for supply top\n    // (3*ETH/a + (supplyNOM_Bot/a)^3)^(1/3)\n    const supplyTop = a*(3*amount/a + supplyBot**3/a**3)**(1/3)\n    console.log(\"supply top: \", supplyTop)\n    // 3. Subtract supply bottom from top to get amount NOM for amount ETH\n    const diff = supplyTop - supplyBot\n    console.log(\"diff\", diff)\n    return { supplyBot, supplyTop, diff }\n}\n\n// Returns Sell Quote: NOM for ETH (Dec 18)\n// Parameters:\n// Input\n// uint256 amountNOM: amount of NOM to be sold (18 decimal)\n// Output\n// uint256: amount of ETH paid in Wei or ETH (18 decimal)\nexport function NOMtoETH(amount, supply) {\n    const price = priceAtSupply(supply)\n    // 1. Determine supply top: priceBondCurve - 1% = Top Sale Price\n    const priceTop = price*(.99)\n    const supplyTop = supplyAtPrice(priceTop);\n    const supplyBot = supplyTop - amount;\n    // 2. Integrate over curve to find ETH\n    // ETH = a/3((supplyNOM_Top/a)^3 - (supplyNOM_Bot/a)^3)\n    console.log(\"Supply Top: \", supplyTop)\n    console.log(\"Supply Bot: \", supplyBot)\n    const diff = NOMsupplyETH(supplyTop, supplyBot)\n    return { supplyBot, supplyTop, diff}\n}","/home/dninja/Projects/github/otrust/src/context/chain/ChainContext.js",["159","160","161"],"import React, { useState, useEffect, createContext, useContext } from 'react'\nimport { useWeb3React } from \"@web3-react/core\"\n\nexport const ChainContext = createContext()\nexport const useChain = () => useContext(ChainContext)\n\nexport const UpdateChainContext = createContext()\nexport const useUpdateChain = () => useContext(UpdateChainContext)\n\nconst fetcher = (library) => (...args) => {\n    const [method, ...params] = args\n    return library[method](...params)\n}\n\nfunction ChainProvider ({children}) {\n    const { account, library } = useWeb3React()\n    const [blockNumber, setBlockNumber] = useState()\n    const [ETHbalance, setETHBalance] = useState()\n\n    const [currSupply, setCurrSupply] = useState(1000)\n\n    useEffect(() => {\n        // listen for changes on an Ethereum address\n        library.on('block', (number) => {\n            setBlockNumber(number)\n            library\n                .getBalance(account)\n                .then((balance) => {\n                    setETHBalance(balance)\n                })\n        })\n        // remove listener when the component is unmounted\n        return () => {\n          library.removeAllListeners('block')\n        }\n        // trigger the effect only on component mount\n    }, [])\n\n    const contextValue = {\n        blockNumber,\n        currSupply\n    }\n\n    const updateValue = {\n        setCurrSupply\n    }\n\n    return (\n        <UpdateChainContext.Provider value = { updateValue }>\n            <ChainContext.Provider value = { contextValue } >\n                {children}\n            </ChainContext.Provider>\n        </UpdateChainContext.Provider>\n    )\n}\n\nexport default ChainProvider\n",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":21,"column":6,"nodeType":"168","endLine":21,"endColumn":16,"suggestions":"169"},{"ruleId":"166","severity":1,"message":"170","line":60,"column":26,"nodeType":"171","endLine":60,"endColumn":89},{"ruleId":"166","severity":1,"message":"172","line":96,"column":81,"nodeType":"168","endLine":96,"endColumn":83,"suggestions":"173"},{"ruleId":"166","severity":1,"message":"174","line":98,"column":22,"nodeType":"175","endLine":98,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":112,"column":38,"nodeType":"175","messageId":"178","endLine":112,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":148,"column":37,"nodeType":"171","messageId":"181","endLine":148,"endColumn":39},{"ruleId":"176","severity":1,"message":"182","line":4,"column":3,"nodeType":"175","messageId":"178","endLine":4,"endColumn":8},{"ruleId":"176","severity":1,"message":"183","line":9,"column":3,"nodeType":"175","messageId":"178","endLine":9,"endColumn":6},{"ruleId":"166","severity":1,"message":"184","line":143,"column":6,"nodeType":"168","endLine":143,"endColumn":42,"suggestions":"185"},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"175","messageId":"178","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"186","line":1,"column":8,"nodeType":"175","messageId":"178","endLine":1,"endColumn":13},{"ruleId":"162","replacedBy":"187"},{"ruleId":"164","replacedBy":"188"},{"ruleId":"162","replacedBy":"189"},{"ruleId":"164","replacedBy":"190"},{"ruleId":"176","severity":1,"message":"191","line":4,"column":10,"nodeType":"175","messageId":"178","endLine":4,"endColumn":19},{"ruleId":"166","severity":1,"message":"192","line":49,"column":7,"nodeType":"168","endLine":49,"endColumn":45,"suggestions":"193"},{"ruleId":"176","severity":1,"message":"194","line":3,"column":7,"nodeType":"175","messageId":"178","endLine":3,"endColumn":21},{"ruleId":"176","severity":1,"message":"195","line":10,"column":7,"nodeType":"175","messageId":"178","endLine":10,"endColumn":14},{"ruleId":"176","severity":1,"message":"196","line":18,"column":12,"nodeType":"175","messageId":"178","endLine":18,"endColumn":22},{"ruleId":"166","severity":1,"message":"197","line":37,"column":8,"nodeType":"168","endLine":37,"endColumn":10,"suggestions":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["201"],"Assignments to the 'upperBound' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","React Hook useCallback has a missing dependency: 'setSwapBuyAmount'. Either include it or remove the dependency array.",["202"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'error' is assigned a value but never used.","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'curve' is defined but never used.","'max' is defined but never used.","React Hook useEffect has missing dependencies: 'areaData', 'margin.bottom', 'margin.left', 'margin.right', and 'margin.top'. Either include them or remove the dependency array.",["203"],"'React' is defined but never used.",["199"],["200"],["199"],["200"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'swapSellAmount'. Either include it or remove the dependency array.",["204"],"'priceBondCurve' is assigned a value but never used.","'fetcher' is assigned a value but never used.","'ETHbalance' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'account' and 'library'. Either include them or remove the dependency array.",["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [activate, active]",{"range":"216","text":"217"},"Update the dependencies array to be: [setSwapBuyAmount]",{"range":"218","text":"219"},"Update the dependencies array to be: [areaData, currentZoomState, data, dimensions, margin.bottom, margin.left, margin.right, margin.top]",{"range":"220","text":"221"},"Update the dependencies array to be: [swapDenom, swapBuyAmount, currSupply, swapSellAmount]",{"range":"222","text":"223"},"Update the dependencies array to be: [account, library]",{"range":"224","text":"225"},[577,587],"[activate, active]",[2379,2381],"[setSwapBuyAmount]",[3456,3492],"[areaData, currentZoomState, data, dimensions, margin.bottom, margin.left, margin.right, margin.top]",[1671,1709],"[swapDenom, swapBuyAmount, currSupply, swapSellAmount]",[1232,1234],"[account, library]"]