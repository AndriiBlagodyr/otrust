[{"/home/dninja/Projects/github/otrust/src/index.js":"1","/home/dninja/Projects/github/otrust/src/App.js":"2","/home/dninja/Projects/github/otrust/src/reportWebVitals.js":"3","/home/dninja/Projects/github/otrust/src/context/AutoLogin.js":"4","/home/dninja/Projects/github/otrust/src/theme/theme.js":"5","/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js":"6","/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js":"7","/home/dninja/Projects/github/otrust/src/pages/Landing.js":"8","/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js":"9","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js":"10","/home/dninja/Projects/github/otrust/src/utils/index.js":"11","/home/dninja/Projects/github/otrust/src/components/AcctDash.js":"12","/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js":"13","/home/dninja/Projects/github/otrust/src/connectors/index.js":"14","/home/dninja/Projects/github/otrust/src/components/Swap/index.js":"15","/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js":"16","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js":"17","/home/dninja/Projects/github/otrust/src/components/UI/index.js":"18","/home/dninja/Projects/github/otrust/src/components/index.js":"19","/home/dninja/Projects/github/otrust/src/components/UI/Container.js":"20","/home/dninja/Projects/github/otrust/src/components/UI/Panel.js":"21","/home/dninja/Projects/github/otrust/src/components/Chart/index.js":"22","/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js":"23","/home/dninja/Projects/github/otrust/src/components/Dropdown.js":"24","/home/dninja/Projects/github/otrust/src/utils/device.js":"25","/home/dninja/Projects/github/otrust/src/components/MainHeader.js":"26","/home/dninja/Projects/github/otrust/src/components/UI/Button.js":"27","/home/dninja/Projects/github/otrust/src/lib/use-async-fn.js":"28","/home/dninja/Projects/github/otrust/src/context/SwapContext.js":"29","/home/dninja/Projects/github/otrust/src/utils/bonding.js":"30","/home/dninja/Projects/github/otrust/src/context/chain/ChainContext.js":"31","/home/dninja/Projects/github/otrust/src/context/Web3Context.js":"32","/home/dninja/Projects/github/otrust/src/context/chain/contracts.js":"33"},{"size":827,"mtime":1612637398517,"results":"34","hashOfConfig":"35"},{"size":592,"mtime":1614049856846,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1612310514019,"results":"37","hashOfConfig":"35"},{"size":1468,"mtime":1614363407258,"results":"38","hashOfConfig":"35"},{"size":1563,"mtime":1612485602596,"results":"39","hashOfConfig":"35"},{"size":1284,"mtime":1612380397289,"results":"40","hashOfConfig":"35"},{"size":763,"mtime":1612567310809,"results":"41","hashOfConfig":"35"},{"size":726,"mtime":1612483929619,"results":"42","hashOfConfig":"35"},{"size":805,"mtime":1614363478975,"results":"43","hashOfConfig":"35"},{"size":1261,"mtime":1614363521565,"results":"44","hashOfConfig":"35"},{"size":1435,"mtime":1613099878611,"results":"45","hashOfConfig":"35"},{"size":2464,"mtime":1614311935918,"results":"46","hashOfConfig":"35"},{"size":2487,"mtime":1614362988140,"results":"47","hashOfConfig":"35"},{"size":574,"mtime":1612375843438,"results":"48","hashOfConfig":"35"},{"size":5585,"mtime":1614363084814,"results":"49","hashOfConfig":"35"},{"size":4243,"mtime":1614313312357,"results":"50","hashOfConfig":"35"},{"size":602,"mtime":1612378972455,"results":"51","hashOfConfig":"35"},{"size":77,"mtime":1612486005856,"results":"52","hashOfConfig":"35"},{"size":95,"mtime":1612402942747,"results":"53","hashOfConfig":"35"},{"size":757,"mtime":1612379121302,"results":"54","hashOfConfig":"35"},{"size":462,"mtime":1612456583403,"results":"55","hashOfConfig":"35"},{"size":26,"mtime":1612382748218,"results":"56","hashOfConfig":"35"},{"size":159,"mtime":1612379395588,"results":"57","hashOfConfig":"35"},{"size":1909,"mtime":1614362976167,"results":"58","hashOfConfig":"35"},{"size":585,"mtime":1612456251291,"results":"59","hashOfConfig":"35"},{"size":1027,"mtime":1612639660120,"results":"60","hashOfConfig":"35"},{"size":1529,"mtime":1612485871497,"results":"61","hashOfConfig":"35"},{"size":645,"mtime":1612491878200,"results":"62","hashOfConfig":"35"},{"size":1873,"mtime":1614363429023,"results":"63","hashOfConfig":"35"},{"size":1623,"mtime":1614363547736,"results":"64","hashOfConfig":"35"},{"size":2249,"mtime":1614363444680,"results":"65","hashOfConfig":"35"},{"size":2291,"mtime":1612374698233,"results":"66","hashOfConfig":"35"},{"size":594,"mtime":1614129976979,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"vzbwgb",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},"/home/dninja/Projects/github/otrust/src/index.js",[],["141","142"],"/home/dninja/Projects/github/otrust/src/App.js",[],"/home/dninja/Projects/github/otrust/src/reportWebVitals.js",[],"/home/dninja/Projects/github/otrust/src/context/AutoLogin.js",[],"/home/dninja/Projects/github/otrust/src/theme/theme.js",[],"/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js",[],"/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js",[],"/home/dninja/Projects/github/otrust/src/pages/Landing.js",[],"/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js",[],"/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js",[],"/home/dninja/Projects/github/otrust/src/utils/index.js",[],"/home/dninja/Projects/github/otrust/src/components/AcctDash.js",[],"/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js",["143","144"],"/home/dninja/Projects/github/otrust/src/connectors/index.js",[],"/home/dninja/Projects/github/otrust/src/components/Swap/index.js",["145","146","147","148","149","150","151","152","153"],"/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js",["154","155","156","157","158","159","160"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { formatEther } from '@ethersproject/units'\nimport { useChain } from 'context/chain/ChainContext'\nimport {\n  area,\n  curve,\n  extent,\n  select,\n  scaleLinear,\n  line,\n  max,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n  zoomTransform\n} from \"d3\";\nimport { useResizeObserver } from \"./utils\";\nimport styled from \"styled-components\";\n\n\nconst StyledSVG = styled.svg`\n    display: block;\n    width: 100%;\n    height: 400px;\n    overflow: visible;\n`\n\n/**\n * Component that renders a ZoomableLineChart\n */\n\nfunction LineChart({ data, areaData, labelData: { paymentETH, supAvg, priceAvg }, id = \"bondingChart\" }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  var margin = {top: 20, right: 20, bottom: 40, left: 80}\n  const { supplyNOM } = useChain()\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const svgContent = svg.select(\".content\");\n   \n\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    function xValue(d) { return d.x; }      // accessors\n    function yValue(d) { return d.y; }\n\n    // scales + line generator\n    const xScale = scaleLinear()\n      .domain(extent(data, xValue))\n      .range([margin.left, width - margin.right]);\n\n\n    const yScale = scaleLinear()\n      .domain(extent(data, yValue))\n      .range([height - margin.top - margin.bottom, 10]);\n\n\n    \n    var lineGenerator = line()\n      .x(d => xScale(d.x))\n      .y(d => yScale(d.y)) // apply the y scale to the y data\n      .curve(curveCardinal);\n\n    var areaGenerator = area()\n      .x(d => xScale(d.x))\n      .y0(yScale(0))\n      .y1(d => yScale(d.y))\n      .curve(curveCardinal)\n\n    // render the line\n    svgContent\n      .selectAll(\".myLine\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", lineGenerator);\n    \n    svgContent\n      .selectAll(\".mySelection\")\n      .data([areaData])\n      .join(\"path\")\n      .attr(\"class\", \"mySelection\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"fill\", \"#0e4265\")\n      .attr(\"d\", areaGenerator)\n    /**\n    svgContent\n      .selectAll(\".myLine2\")\n      .data([labelData])\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", lineGenerator);\n  \n     */\n    \n    // axes\n    const xAxis = axisBottom(xScale);\n\n    svg\n      .selectAll(\"text\")\n      .exit()\n      .remove()\n\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height - margin.bottom - margin.top})`)\n      .call(xAxis);\n\n    // Add X axis label:\n    svg.append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width)\n      .attr(\"y\", height)\n      .text(\"NOM Issued\");\n\n    const yAxis = axisLeft(yScale);\n    svg\n      .select(\".y-axis\")\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(yAxis);\n    \n    // Y axis label:\n    svg\n    .append(\"text\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 0)\n    .attr(\"x\", -margin.top)\n    .text(\"Price (ETH/NOM)\")\n    \n    /*\n    if (priceAvg) {\n      svg.select(\".areaLabel\").exit().remove()\n\n      svg\n        .select(\".areaLabel\")\n        .append(\"text\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"y\", yScale(priceAvg))\n        .attr(\"x\", xScale(supAvg))\n        .text(`${priceAvg.toString()}`)\n    }\n    */\n\n    \n  }, [priceAvg, areaData, data, dimensions]);\n\n  return (\n    <React.Fragment>\n      { !supplyNOM ? null : `Current Supply: ${parseFloat(supplyNOM).toPrecision(8)}` }\n      <div ref={wrapperRef} style={{ marginTop: \"1rem\" }}>\n        <StyledSVG ref={svgRef}>\n          <defs>\n            <clipPath id={id}>\n              <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n            </clipPath>\n          </defs>\n          <g className=\"content\" clipPath={`url(#${id})`} />\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n          <g className=\"areaLabel\" />\n        </StyledSVG>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default LineChart;","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js",["161"],"\nimport React, { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const useResizeObserver = (ref) => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n      const observeTarget = ref.current;\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }, [ref]);\n    return dimensions;\n};","/home/dninja/Projects/github/otrust/src/components/UI/index.js",[],"/home/dninja/Projects/github/otrust/src/components/index.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Container.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Panel.js",["162"],"import React from 'react'\nimport styled from 'styled-components'\nimport {borderWidth, borderRadius} from 'context/responsive/cssSizes'\n\nexport const Panel = styled.div`\n  padding: 1.5rem 2rem;  \n\n  border: ${borderWidth} solid ${props => props.theme.colors.panelBorder};\n  background-color: ${props => props.theme.colors.panel};\n  border-radius: ${borderRadius};\n\n  box-sizing: border-box;\n\n  box-shadow: 0 .625rem 1.5rem ${props => props.theme.colors.shadow};\n`","/home/dninja/Projects/github/otrust/src/components/Chart/index.js",[],"/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js",[],"/home/dninja/Projects/github/otrust/src/components/Dropdown.js",[],"/home/dninja/Projects/github/otrust/src/utils/device.js",[],["163","164"],"/home/dninja/Projects/github/otrust/src/components/MainHeader.js",["165"],"import React from 'react'\nimport styled from 'styled-components'\n\nimport { Container } from 'components/UI'\nimport { headerFill, header } from 'context/responsive/cssSizes'\nimport logo from 'assets/logo.png'\n\nconst Sticker = styled.header`\n    position: sticky;\n    top: 0;\n    z-index: 10;\n`\nconst HeaderWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center\n\n    height: ${p => p.height};\n    width: 100%;\n    \n    background-color: ${props => props.theme.colors.headerBackground};\n    border-bottom: .1rem solid ${props => props.theme.colors.border};\n    \n`\nconst Filler = styled.div`\n    height: ${p => p.height};\n    width: 100%;\n    z-index: 10;\n`\nconst StyledImg = styled.img`\n    display: block;\n    margin: auto;\n`\n\nexport default function MainHeader() {\n    return (\n        <Sticker>\n            <HeaderWrapper height={header}>\n                <StyledImg src={logo} alt=\"logo\" />\n            </HeaderWrapper>\n            <Filler height={headerFill}/>\n        </Sticker>\n    )\n}","/home/dninja/Projects/github/otrust/src/components/UI/Button.js",[],"/home/dninja/Projects/github/otrust/src/lib/use-async-fn.js",[],"/home/dninja/Projects/github/otrust/src/context/SwapContext.js",[],"/home/dninja/Projects/github/otrust/src/utils/bonding.js",[],"/home/dninja/Projects/github/otrust/src/context/chain/ChainContext.js",["166"],"/home/dninja/Projects/github/otrust/src/context/Web3Context.js",["167"],"/home/dninja/Projects/github/otrust/src/context/chain/contracts.js",["168"],"import { Contract } from \"@ethersproject/contracts\";\nconst NomContractJSON = require('./ERC20NOM.json')\nconst BondingContractJSON = require('./BondingNOM.json')\n\nexport const contAddrs = require('./NOMAddrs.json')\n\n/**\n * NOM ERC20 Contract instance\n */\nexport function NOMCont(library) {\n  const ABI = NomContractJSON.abi\n  return new Contract(contAddrs.NOMERC20, NomContractJSON.abi, library.getSigner())\n}\n\n/**\n * Haven Contract instance\n */\nexport function BondingCont(library) {\n  const ABI = BondingContractJSON.abi\n  return new Contract(contAddrs.BondingNOM, ABI, library.getSigner())\n}\n",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":17,"column":7,"nodeType":"175","messageId":"176","endLine":17,"endColumn":8},{"ruleId":"177","severity":1,"message":"178","line":66,"column":26,"nodeType":"179","endLine":66,"endColumn":89},{"ruleId":"173","severity":1,"message":"180","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":21},{"ruleId":"177","severity":1,"message":"181","line":98,"column":81,"nodeType":"182","endLine":98,"endColumn":83,"suggestions":"183"},{"ruleId":"177","severity":1,"message":"184","line":101,"column":25,"nodeType":"175","endLine":101,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":106,"column":27,"nodeType":"179","messageId":"187","endLine":106,"endColumn":29},{"ruleId":"173","severity":1,"message":"188","line":108,"column":27,"nodeType":"175","messageId":"176","endLine":108,"endColumn":35},{"ruleId":"173","severity":1,"message":"189","line":116,"column":23,"nodeType":"175","messageId":"176","endLine":116,"endColumn":27},{"ruleId":"173","severity":1,"message":"190","line":117,"column":23,"nodeType":"175","messageId":"176","endLine":117,"endColumn":27},{"ruleId":"173","severity":1,"message":"191","line":128,"column":33,"nodeType":"175","messageId":"176","endLine":128,"endColumn":38},{"ruleId":"185","severity":1,"message":"186","line":166,"column":41,"nodeType":"179","messageId":"187","endLine":166,"endColumn":43},{"ruleId":"173","severity":1,"message":"192","line":1,"column":36,"nodeType":"175","messageId":"176","endLine":1,"endColumn":44},{"ruleId":"173","severity":1,"message":"180","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":21},{"ruleId":"173","severity":1,"message":"193","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":8},{"ruleId":"173","severity":1,"message":"194","line":11,"column":3,"nodeType":"175","messageId":"176","endLine":11,"endColumn":6},{"ruleId":"173","severity":1,"message":"195","line":15,"column":3,"nodeType":"175","messageId":"176","endLine":15,"endColumn":7},{"ruleId":"173","severity":1,"message":"196","line":16,"column":3,"nodeType":"175","messageId":"176","endLine":16,"endColumn":16},{"ruleId":"177","severity":1,"message":"197","line":155,"column":6,"nodeType":"182","endLine":155,"endColumn":44,"suggestions":"198"},{"ruleId":"173","severity":1,"message":"199","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":13},{"ruleId":"173","severity":1,"message":"199","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"169","replacedBy":"200"},{"ruleId":"171","replacedBy":"201"},{"ruleId":"173","severity":1,"message":"202","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":19},{"ruleId":"177","severity":1,"message":"203","line":47,"column":8,"nodeType":"182","endLine":47,"endColumn":10,"suggestions":"204"},{"ruleId":"177","severity":1,"message":"205","line":59,"column":7,"nodeType":"182","endLine":59,"endColumn":9,"suggestions":"206"},{"ruleId":"173","severity":1,"message":"207","line":11,"column":9,"nodeType":"175","messageId":"176","endLine":11,"endColumn":12},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'upperBound' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","'formatEther' is defined but never used.","React Hook useCallback has a missing dependency: 'setSwapBuyAmount'. Either include it or remove the dependency array.","ArrayExpression",["210"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'response' is assigned a value but never used.","'res1' is assigned a value but never used.","'res2' is assigned a value but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'curve' is defined but never used.","'max' is defined but never used.","'zoom' is defined but never used.","'zoomTransform' is defined but never used.","React Hook useEffect has missing dependencies: 'margin.bottom', 'margin.left', 'margin.right', and 'margin.top'. Either include them or remove the dependency array.",["211"],"'React' is defined but never used.",["208"],["209"],"'Container' is defined but never used.","React Hook useEffect has missing dependencies: 'NOMcontract', 'account', 'bondContract', and 'library'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has a missing dependency: 'initWeb3'. Either include it or remove the dependency array.",["213"],"'ABI' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [setSwapBuyAmount]",{"range":"222","text":"223"},"Update the dependencies array to be: [priceAvg, areaData, data, dimensions, margin.left, margin.right, margin.top, margin.bottom]",{"range":"224","text":"225"},"Update the dependencies array to be: [NOMcontract, account, bondContract, library]",{"range":"226","text":"227"},"Update the dependencies array to be: [initWeb3]",{"range":"228","text":"229"},[2496,2498],"[setSwapBuyAmount]",[3579,3617],"[priceAvg, areaData, data, dimensions, margin.left, margin.right, margin.top, margin.bottom]",[1735,1737],"[NOMcontract, account, bondContract, library]",[1782,1784],"[initWeb3]"]