[{"/home/dninja/Projects/github/onex3/src/index.js":"1","/home/dninja/Projects/github/onex3/src/App.js":"2","/home/dninja/Projects/github/onex3/src/reportWebVitals.js":"3","/home/dninja/Projects/github/onex3/src/context/Web3Context.js":"4","/home/dninja/Projects/github/onex3/src/pages/Landing.js":"5","/home/dninja/Projects/github/onex3/src/context/AutoLogin.js":"6","/home/dninja/Projects/github/onex3/src/hooks/useEagerConnect.js":"7","/home/dninja/Projects/github/onex3/src/hooks/useInactiveListener.js":"8","/home/dninja/Projects/github/onex3/src/connectors/index.js":"9","/home/dninja/Projects/github/onex3/src/utils/index.js":"10","/home/dninja/Projects/github/onex3/src/components/AcctDash.js":"11","/home/dninja/Projects/github/onex3/src/components/Chart/D3Chart.js":"12","/home/dninja/Projects/github/onex3/src/components/Chart/D3LineChart.js":"13","/home/dninja/Projects/github/onex3/src/components/UI/Container.js":"14","/home/dninja/Projects/github/onex3/src/components/Chart/utils.js":"15","/home/dninja/Projects/github/onex3/src/components/UI/index.js":"16","/home/dninja/Projects/github/onex3/src/components/UI/Panel.js":"17","/home/dninja/Projects/github/onex3/src/context/responsive/cssSizes.js":"18","/home/dninja/Projects/github/onex3/src/theme/theme.js":"19","/home/dninja/Projects/github/onex3/src/theme/GlobalStyle.js":"20","/home/dninja/Projects/github/onex3/src/pages/NOMTrust.js":"21","/home/dninja/Projects/github/onex3/src/components/Swap/index.js":"22","/home/dninja/Projects/github/onex3/src/components/index.js":"23","/home/dninja/Projects/github/onex3/src/components/Chart/index.js":"24"},{"size":816,"mtime":1612375444832,"results":"25","hashOfConfig":"26"},{"size":414,"mtime":1612381504876,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1612310514019,"results":"28","hashOfConfig":"26"},{"size":1787,"mtime":1612317142168,"results":"29","hashOfConfig":"26"},{"size":726,"mtime":1612376531501,"results":"30","hashOfConfig":"26"},{"size":1464,"mtime":1612376452295,"results":"31","hashOfConfig":"26"},{"size":869,"mtime":1612375941823,"results":"32","hashOfConfig":"26"},{"size":1407,"mtime":1612375798696,"results":"33","hashOfConfig":"26"},{"size":574,"mtime":1612375843438,"results":"34","hashOfConfig":"26"},{"size":1419,"mtime":1612376070070,"results":"35","hashOfConfig":"26"},{"size":3496,"mtime":1612380910900,"results":"36","hashOfConfig":"26"},{"size":1086,"mtime":1612381028730,"results":"37","hashOfConfig":"26"},{"size":3199,"mtime":1612378972451,"results":"38","hashOfConfig":"26"},{"size":757,"mtime":1612379121302,"results":"39","hashOfConfig":"26"},{"size":602,"mtime":1612378972455,"results":"40","hashOfConfig":"26"},{"size":52,"mtime":1612379632904,"results":"41","hashOfConfig":"26"},{"size":462,"mtime":1612379501410,"results":"42","hashOfConfig":"26"},{"size":159,"mtime":1612379395588,"results":"43","hashOfConfig":"26"},{"size":1563,"mtime":1612380124899,"results":"44","hashOfConfig":"26"},{"size":1284,"mtime":1612380397289,"results":"45","hashOfConfig":"26"},{"size":504,"mtime":1612383014680,"results":"46","hashOfConfig":"26"},{"size":320,"mtime":1612383083373,"results":"47","hashOfConfig":"26"},{"size":68,"mtime":1612382772895,"results":"48","hashOfConfig":"26"},{"size":26,"mtime":1612382748218,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"yh1nqp",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dninja/Projects/github/onex3/src/index.js",[],["105","106"],"/home/dninja/Projects/github/onex3/src/App.js",[],"/home/dninja/Projects/github/onex3/src/reportWebVitals.js",[],"/home/dninja/Projects/github/onex3/src/context/Web3Context.js",["107"],"import React, { useEffect, useState, createContext, useContext } from 'react'\nimport Web3 from 'web3'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Landing from '../pages/Landing'\n\nexport const Web3Context = createContext()\nexport const useWeb3 = () => useContext(Web3Context)\n\nexport const UpdateWeb3Context = createContext()\nexport const useUpdateWeb3 = () => useContext(UpdateWeb3Context)\n\nexport function Web3Provider({children}) {\n    const [web3, updateWeb3] = useState()\n    const [web3Connected, updateWeb3Connected] = useState('')\n\n    const providerOptions = {\n        metamask: {\n            id: 'injected',\n            name: 'MetaMask',\n            type: 'injected',\n            check: 'isMetaMask'\n        },\n        walletconnect: {\n            package: WalletConnectProvider, // required\n            options: {\n              infuraId: 'e2d976079ef24c0eb7e1f41098737e60' // required\n            }\n        }\n    }\n\n    const initWeb3 = async () => {\n        const web3Modal = new Web3Modal({\n            providerOptions\n        })\n        const provider = await web3Modal.connect()\n        const newWeb3 = new Web3(provider)\n        updateWeb3(newWeb3)\n        updateWeb3Connected(true)\n    }\n\n    useEffect(() => {\n        initWeb3()\n    },[])\n\n    const contextValue = {  \n        web3,\n        web3Connected\n    }\n\n    const updateValue = {  \n        updateWeb3, \n        updateWeb3Connected\n    }\n\n    return (\n        <UpdateWeb3Context.Provider value= { updateValue }>\n            <Web3Context.Provider value = { contextValue } >\n                { web3Connected ? children : \n                <Landing initWeb3={initWeb3} /> }\n            </Web3Context.Provider>\n        </UpdateWeb3Context.Provider>\n    )\n}",["108","109"],"/home/dninja/Projects/github/onex3/src/pages/Landing.js",[],"/home/dninja/Projects/github/onex3/src/context/AutoLogin.js",[],"/home/dninja/Projects/github/onex3/src/hooks/useEagerConnect.js",["110"],"import { useState, useEffect } from \"react\"\nimport { useWeb3React } from \"@web3-react/core\"\n\nimport { injected } from \"../connectors\"\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      console.log(\"useEagerConnect:\", { active, isAuthorized })\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n","/home/dninja/Projects/github/onex3/src/hooks/useInactiveListener.js",[],"/home/dninja/Projects/github/onex3/src/connectors/index.js",[],"/home/dninja/Projects/github/onex3/src/utils/index.js",[],"/home/dninja/Projects/github/onex3/src/components/AcctDash.js",[],"/home/dninja/Projects/github/onex3/src/components/Chart/D3Chart.js",[],"/home/dninja/Projects/github/onex3/src/components/Chart/D3LineChart.js",["111","112","113"],"import React, { useRef, useEffect, useState } from \"react\";\nimport {\n  extent,\n  select,\n  scaleLinear,\n  line,\n  max,\n  curveCardinal,\n  axisBottom,\n  axisLeft,\n  zoom,\n  zoomTransform\n} from \"d3\";\nimport { useResizeObserver } from \"./utils\";\nimport styled from \"styled-components\";\n\n\nconst StyledSVG = styled.svg`\n    display: block;\n    width: 100%;\n    height: 400px;\n    overflow: visible;\n`\n\n\n/**\n * Component that renders a ZoomableLineChart\n */\n\nfunction ZoomableLineChart({ data, id = \"myZoomableLineChart\" }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const svgContent = svg.select(\".content\");\n\n    // X and Y data arrays\n    const xDataArray = data.map(item => item.x)\n    const yDataArray = data.map(item => item.y)\n\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    function xValue(d) { return d.x; }      // accessors\n    function yValue(d) { return d.y; }\n\n    // scales + line generator\n    const xScale = scaleLinear()\n      .domain(extent(data, xValue))\n      .range([10, width - 10]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale.domain(newXScale.domain());\n    }\n\n    const yScale = scaleLinear()\n      .domain(extent(data, yValue))\n      .range([height - 10, 10]);\n\n    // Temporary\n    if (currentZoomState) {\n        const newYScale = currentZoomState.rescaleY(yScale);\n        yScale.domain(newYScale.domain());\n    }\n    \n    var lineGenerator = line()\n      .x(d => xScale(d.x))\n      .y(d => yScale(d.y)) // apply the y scale to the y data\n      .curve(curveCardinal);\n\n    // render the line\n    svgContent\n      .selectAll(\".myLine\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"class\", \"myLine\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", lineGenerator);\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis);\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n\n    // zoom\n    const zoomBehavior = zoom()\n      .scaleExtent([0.5, 5])\n      .translateExtent([\n        [0, 0],\n        [width, height]\n      ])\n      .on(\"zoom\", () => {\n        const zoomState = zoomTransform(svg.node());\n        setCurrentZoomState(zoomState);\n      });\n\n    svg.call(zoomBehavior);\n  }, [currentZoomState, data, dimensions]);\n\n  return (\n    <React.Fragment>\n      <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n        <StyledSVG ref={svgRef}>\n          <defs>\n            <clipPath id={id}>\n              <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n            </clipPath>\n          </defs>\n          <g className=\"content\" clipPath={`url(#${id})`}>\n            \n          </g>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </StyledSVG>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ZoomableLineChart;","/home/dninja/Projects/github/onex3/src/components/UI/Container.js",[],"/home/dninja/Projects/github/onex3/src/components/Chart/utils.js",["114"],"\nimport React, { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const useResizeObserver = (ref) => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n      const observeTarget = ref.current;\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }, [ref]);\n    return dimensions;\n};","/home/dninja/Projects/github/onex3/src/components/UI/index.js",[],"/home/dninja/Projects/github/onex3/src/components/UI/Panel.js",["115"],"import React from 'react'\nimport styled from 'styled-components'\nimport {borderWidth, borderRadius} from 'context/responsive/cssSizes'\n\nexport const Panel = styled.div`\n  padding: 1.5rem 2rem;  \n\n  border: ${borderWidth} solid ${props => props.theme.colors.panelBorder};\n  background-color: ${props => props.theme.colors.panel};\n  border-radius: ${borderRadius};\n\n  box-sizing: border-box;\n\n  box-shadow: 0 .625rem 1.5rem ${props => props.theme.colors.shadow};\n`","/home/dninja/Projects/github/onex3/src/context/responsive/cssSizes.js",[],"/home/dninja/Projects/github/onex3/src/theme/theme.js",[],"/home/dninja/Projects/github/onex3/src/theme/GlobalStyle.js",[],"/home/dninja/Projects/github/onex3/src/pages/NOMTrust.js",[],"/home/dninja/Projects/github/onex3/src/components/Swap/index.js",[],"/home/dninja/Projects/github/onex3/src/components/index.js",[],"/home/dninja/Projects/github/onex3/src/components/Chart/index.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":44,"column":7,"nodeType":"122","endLine":44,"endColumn":9,"suggestions":"123"},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"120","severity":1,"message":"126","line":21,"column":6,"nodeType":"122","endLine":21,"endColumn":16,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":7,"column":3,"nodeType":"130","messageId":"131","endLine":7,"endColumn":6},{"ruleId":"128","severity":1,"message":"132","line":42,"column":11,"nodeType":"130","messageId":"131","endLine":42,"endColumn":21},{"ruleId":"128","severity":1,"message":"133","line":43,"column":11,"nodeType":"130","messageId":"131","endLine":43,"endColumn":21},{"ruleId":"128","severity":1,"message":"134","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"134","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":13},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initWeb3'. Either include it or remove the dependency array.","ArrayExpression",["137"],["135"],["136"],"React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.",["138"],"no-unused-vars","'max' is defined but never used.","Identifier","unusedVar","'xDataArray' is assigned a value but never used.","'yDataArray' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [initWeb3]",{"range":"143","text":"144"},"Update the dependencies array to be: [activate, active]",{"range":"145","text":"146"},[1315,1317],"[initWeb3]",[577,587],"[activate, active]"]