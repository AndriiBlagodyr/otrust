[{"/home/dninja/Projects/github/otrust/src/index.js":"1","/home/dninja/Projects/github/otrust/src/App.js":"2","/home/dninja/Projects/github/otrust/src/reportWebVitals.js":"3","/home/dninja/Projects/github/otrust/src/context/AutoLogin.js":"4","/home/dninja/Projects/github/otrust/src/theme/theme.js":"5","/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js":"6","/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js":"7","/home/dninja/Projects/github/otrust/src/pages/Landing.js":"8","/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js":"9","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js":"10","/home/dninja/Projects/github/otrust/src/utils/index.js":"11","/home/dninja/Projects/github/otrust/src/components/AcctDash.js":"12","/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js":"13","/home/dninja/Projects/github/otrust/src/connectors/index.js":"14","/home/dninja/Projects/github/otrust/src/components/Swap/index.js":"15","/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js":"16","/home/dninja/Projects/github/otrust/src/components/Chart/utils.js":"17","/home/dninja/Projects/github/otrust/src/components/UI/index.js":"18","/home/dninja/Projects/github/otrust/src/components/index.js":"19","/home/dninja/Projects/github/otrust/src/components/UI/Container.js":"20","/home/dninja/Projects/github/otrust/src/components/UI/Panel.js":"21","/home/dninja/Projects/github/otrust/src/components/Chart/index.js":"22","/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js":"23","/home/dninja/Projects/github/otrust/src/components/Dropdown.js":"24","/home/dninja/Projects/github/otrust/src/utils/device.js":"25","/home/dninja/Projects/github/otrust/src/components/MainHeader.js":"26","/home/dninja/Projects/github/otrust/src/components/UI/Button.js":"27","/home/dninja/Projects/github/otrust/src/lib/use-async-fn.js":"28","/home/dninja/Projects/github/otrust/src/context/SwapContext.js":"29","/home/dninja/Projects/github/otrust/src/utils/bonding.js":"30","/home/dninja/Projects/github/otrust/src/context/chain/ChainContext.js":"31","/home/dninja/Projects/github/otrust/src/context/Web3Context.js":"32","/home/dninja/Projects/github/otrust/src/context/chain/contracts.js":"33"},{"size":827,"mtime":1612637398517,"results":"34","hashOfConfig":"35"},{"size":592,"mtime":1614049856846,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1612310514019,"results":"37","hashOfConfig":"35"},{"size":1506,"mtime":1614107190160,"results":"38","hashOfConfig":"35"},{"size":1563,"mtime":1612485602596,"results":"39","hashOfConfig":"35"},{"size":1284,"mtime":1612380397289,"results":"40","hashOfConfig":"35"},{"size":763,"mtime":1612567310809,"results":"41","hashOfConfig":"35"},{"size":726,"mtime":1612483929619,"results":"42","hashOfConfig":"35"},{"size":869,"mtime":1612375941823,"results":"43","hashOfConfig":"35"},{"size":1407,"mtime":1612375798696,"results":"44","hashOfConfig":"35"},{"size":1435,"mtime":1613099878611,"results":"45","hashOfConfig":"35"},{"size":2410,"mtime":1614107778464,"results":"46","hashOfConfig":"35"},{"size":2108,"mtime":1612652618680,"results":"47","hashOfConfig":"35"},{"size":574,"mtime":1612375843438,"results":"48","hashOfConfig":"35"},{"size":5793,"mtime":1614189469230,"results":"49","hashOfConfig":"35"},{"size":4227,"mtime":1614190477591,"results":"50","hashOfConfig":"35"},{"size":602,"mtime":1612378972455,"results":"51","hashOfConfig":"35"},{"size":77,"mtime":1612486005856,"results":"52","hashOfConfig":"35"},{"size":95,"mtime":1612402942747,"results":"53","hashOfConfig":"35"},{"size":757,"mtime":1612379121302,"results":"54","hashOfConfig":"35"},{"size":462,"mtime":1612456583403,"results":"55","hashOfConfig":"35"},{"size":26,"mtime":1612382748218,"results":"56","hashOfConfig":"35"},{"size":159,"mtime":1612379395588,"results":"57","hashOfConfig":"35"},{"size":1933,"mtime":1612568355370,"results":"58","hashOfConfig":"35"},{"size":585,"mtime":1612456251291,"results":"59","hashOfConfig":"35"},{"size":1027,"mtime":1612639660120,"results":"60","hashOfConfig":"35"},{"size":1529,"mtime":1612485871497,"results":"61","hashOfConfig":"35"},{"size":645,"mtime":1612491878200,"results":"62","hashOfConfig":"35"},{"size":1978,"mtime":1614189905499,"results":"63","hashOfConfig":"35"},{"size":2094,"mtime":1612638234142,"results":"64","hashOfConfig":"35"},{"size":2305,"mtime":1614190436582,"results":"65","hashOfConfig":"35"},{"size":2291,"mtime":1612374698233,"results":"66","hashOfConfig":"35"},{"size":594,"mtime":1614129976979,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"vzbwgb",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},"/home/dninja/Projects/github/otrust/src/index.js",[],["144","145"],"/home/dninja/Projects/github/otrust/src/App.js",[],"/home/dninja/Projects/github/otrust/src/reportWebVitals.js",[],"/home/dninja/Projects/github/otrust/src/context/AutoLogin.js",[],"/home/dninja/Projects/github/otrust/src/theme/theme.js",[],"/home/dninja/Projects/github/otrust/src/theme/GlobalStyle.js",[],"/home/dninja/Projects/github/otrust/src/pages/NOMTrust.js",[],"/home/dninja/Projects/github/otrust/src/pages/Landing.js",[],"/home/dninja/Projects/github/otrust/src/hooks/useEagerConnect.js",["146"],"import { useState, useEffect } from \"react\"\nimport { useWeb3React } from \"@web3-react/core\"\n\nimport { injected } from \"../connectors\"\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      console.log(\"useEagerConnect:\", { active, isAuthorized })\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n","/home/dninja/Projects/github/otrust/src/hooks/useInactiveListener.js",[],"/home/dninja/Projects/github/otrust/src/utils/index.js",[],"/home/dninja/Projects/github/otrust/src/components/AcctDash.js",[],"/home/dninja/Projects/github/otrust/src/components/Chart/D3Chart.js",["147"],"import React, { useState, useEffect } from \"react\";\nimport ZoomableLineChart from \"./D3LineChart\";\nimport { Panel } from \"components/UI\"\nimport styled from 'styled-components'\nimport { borderRadius } from 'context/responsive/cssSizes'\nimport { useSwap } from 'context/SwapContext'\n\nconst ChartWrapper = styled.div`\n    height: 100%;\n    min-width: 30rem;\n    max-width: 50rem;\n    flex-basis: auto; /* default value */\n    flex-grow: 1;\n`\n\nconst a = 100000000\n\nfunction SupplyToEth(supply) {\n    return (supply/a)**2\n}\n\nfunction supplyToArray(supBegin, supEnd) {\n    var dataArray = []\n    const dif = supEnd - supBegin\n    const n = 100\n    for (var i = 0; i < n; i++) {\n        dataArray.push(\n            { \n                x: supBegin + dif*i/n,\n                y: SupplyToEth(supBegin + dif*i/n)\n            }\n        );\n    }\n    return dataArray\n}\n\nconst ChartHeader = styled.header`\n  font-size: 1.4rem;\n  color: #fff;\n  height: 3rem;\n  line-height: 3rem;\n  background: ${props => props.theme.colors.headerBackground};\n  text-align: center;\n  vertical-align: middle;\n  border-radius: ${borderRadius};\n`\n\nexport default function D3Chart() {\n    const { swapSupply } = useSwap()\n    var upperBound = 100000000\n    var lowerBound = 0\n    \n    const [data, setData] = useState(supplyToArray(lowerBound, upperBound))\n    const [areaData, setAreaData] = useState(supplyToArray(lowerBound, upperBound))\n\n    useEffect(() => {\n        if (swapSupply[1]) {\n            var digitsUpper = Math.floor(Math.log10(swapSupply[1]))\n            // upperBound = 10**(digitsUpper + 1)\n            upperBound = (Math.round(swapSupply[1]/10**digitsUpper) + 1)*10**digitsUpper\n            setData(supplyToArray(lowerBound, upperBound))\n            setAreaData(supplyToArray(swapSupply[0], swapSupply[1]))\n        }\n    },[swapSupply])\n    \n    \n    \n    return (\n        <ChartWrapper>\n            <Panel>\n                <ChartHeader>\n                    Bonding Curve\n                </ChartHeader>\n                <ZoomableLineChart data={data} areaData={areaData}/>\n            </Panel>\n        </ChartWrapper>\n    )\n}","/home/dninja/Projects/github/otrust/src/connectors/index.js",[],"/home/dninja/Projects/github/otrust/src/components/Swap/index.js",["148","149","150","151","152","153","154","155","156"],"import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Panel } from 'components'\nimport Dropdown from 'components/Dropdown'\nimport { borderRadius } from 'context/responsive/cssSizes'\nimport { AccentButton } from 'components/UI/Button'\nimport { useAsyncFn } from 'lib/use-async-fn'\nimport { useSwap, useUpdateSwap } from 'context/SwapContext'\nimport { useChain } from 'context/chain/ChainContext'\nimport { formatEther, parseEther } from '@ethersproject/units'\n\nconst FlexWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst GridWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto 1fr;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    margin-top: 1rem;\n`\n\nconst RowWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    margin-top: 1rem;\n`\nconst StyledInput = styled.input`\n\n    width: ${p => p.width};\n    height: ${p => p.height};\n    padding-left: ${p => p.paddingLeft};\n\n    border: .1rem solid ${props => props.theme.colors.background};\n    border-radius: ${borderRadius};\n\n    font-size: 1rem;\n    \n\n    box-sizing: border-box;\n\n    ::placeholder {\n        color: ${props => props.theme.colors.background};;\n    }\n\n    &:focus {\n        outline: none;\n        color: #000;\n\n        ::placeholder {\n            color: ${props => props.theme.colors.background};\n        }\n    }\n`\n\nconst RightComponentWrapper = styled.div`\n    width: 5em;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2rem;\n`\nconst LeftComponentWrapper = styled.div`\n    width: 3em;\n    text-align: right;\n    vertical-align: middle;\n    line-height: 2rem;\n`\n\nconst MiddleComponentWrapper = styled.div`\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2rem;\n`\n\nconst SwapHeader = styled.header`\n  font-size: 1.4rem;\n  color: #fff;\n  margin-bottom: 1rem;\n  height: 3rem;\n  line-height: 3rem;\n  background: ${props => props.theme.colors.headerBackground};\n  text-align: center;\n  vertical-align: middle;\n  border-radius: ${borderRadius};\n`\nconst Button = styled(AccentButton)`\n    background-color: ${props => props.theme.colors.headerBackground}\n`\nexport default function Swap() {\n    const { swapDenom, swapBuyAmount, swapSellAmount } = useSwap()\n    const { setSwapBuyAmount, setSwapDenom } = useUpdateSwap()\n    const onTextChange = useCallback(evt => setSwapBuyAmount(evt.target.value), [])\n    const { bondContract, NOMcontract } = useChain()\n\n    const submitTrans = useCallback(\n        async evt => {\n          if (evt) evt.preventDefault()\n          if (!swapBuyAmount) return\n          try {\n            if (swapDenom == 'ETH') {\n                console.log(\"Purchase amount ETH: \", swapBuyAmount)\n                try {\n                    const response = bondContract.buyNOM({value: parseEther(swapBuyAmount.toString()).toString()})\n                    setSwapBuyAmount('')\n                } catch (e) {\n                    // eslint-disable-next-line no-console\n                    console.error(e.stack || e)\n                    setSwapBuyAmount(swapBuyAmount)\n                }\n            } else {\n                console.log(\"Sell amount NOM: \", swapBuyAmount)\n                const res1 = await NOMcontract.increaseAllowance(bondContract.address, parseEther(swapBuyAmount.toString()))\n                const res2 = await bondContract.sellNOM(parseEther(swapBuyAmount.toString())).then((f) => {\n                    console.log(\"Transaction receipt: \", f)\n                })\n                setSwapBuyAmount('')\n            }\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error(e.stack || e)\n            setSwapBuyAmount(swapBuyAmount)\n          }\n        }\n    )\n\n    const [onSubmit, isWorking, error] = useAsyncFn(submitTrans)\n\n    const onTextAreaKeyDown = e => {\n        if (e.keyCode === 13 && e.shiftKey === false) {\n          e.preventDefault()\n        }\n        setSwapBuyAmount(e)\n    }\n\n    return (\n        <FlexWrapper>\n            <Panel>\n                <form onSubmit={ onSubmit }>\n                    <SwapHeader>\n                        Swap\n                    </SwapHeader>\n                    <GridWrapper>\n                    <LeftComponentWrapper>\n                        From:\n                        </LeftComponentWrapper>\n                        <StyledInput\n                            type='text'\n                            value={swapBuyAmount}\n                            onChange={onTextChange}\n                            onTextAreaKeyDown={onTextAreaKeyDown}\n                            placeholder={isWorking ? \"Confirming\":\"Enter amount\"}\n                            width='10rem' \n                            height='2rem' \n                            paddingLeft='1.25rem'\n                        />\n                        <Dropdown denom={swapDenom} setDenom={setSwapDenom}/>\n                        <LeftComponentWrapper>\n                        To: \n                        </LeftComponentWrapper>\n                        <MiddleComponentWrapper>\n                            { (swapSellAmount) ? swapSellAmount.toFixed(9) : null }\n                        </MiddleComponentWrapper>\n                        <RightComponentWrapper>\n                            { swapDenom == 'NOM' ? 'ETH' : 'NOM' }\n                        </RightComponentWrapper>\n                    </GridWrapper>\n                        \n                    <RowWrapper>\n                        <Button type='submit'>\n                            Execute\n                        </Button>\n                    </RowWrapper>\n                </form>\n                \n            </Panel>\n        </FlexWrapper>\n    )\n}","/home/dninja/Projects/github/otrust/src/components/Chart/D3LineChart.js",["157","158","159","160"],"/home/dninja/Projects/github/otrust/src/components/Chart/utils.js",["161"],"\nimport React, { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport const useResizeObserver = (ref) => {\n    const [dimensions, setDimensions] = useState(null);\n    useEffect(() => {\n      const observeTarget = ref.current;\n      const resizeObserver = new ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          setDimensions(entry.contentRect);\n        });\n      });\n      resizeObserver.observe(observeTarget);\n      return () => {\n        resizeObserver.unobserve(observeTarget);\n      };\n    }, [ref]);\n    return dimensions;\n};","/home/dninja/Projects/github/otrust/src/components/UI/index.js",[],"/home/dninja/Projects/github/otrust/src/components/index.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Container.js",[],"/home/dninja/Projects/github/otrust/src/components/UI/Panel.js",["162"],"import React from 'react'\nimport styled from 'styled-components'\nimport {borderWidth, borderRadius} from 'context/responsive/cssSizes'\n\nexport const Panel = styled.div`\n  padding: 1.5rem 2rem;  \n\n  border: ${borderWidth} solid ${props => props.theme.colors.panelBorder};\n  background-color: ${props => props.theme.colors.panel};\n  border-radius: ${borderRadius};\n\n  box-sizing: border-box;\n\n  box-shadow: 0 .625rem 1.5rem ${props => props.theme.colors.shadow};\n`","/home/dninja/Projects/github/otrust/src/components/Chart/index.js",[],"/home/dninja/Projects/github/otrust/src/context/responsive/cssSizes.js",[],"/home/dninja/Projects/github/otrust/src/components/Dropdown.js",[],"/home/dninja/Projects/github/otrust/src/utils/device.js",[],["163","164"],"/home/dninja/Projects/github/otrust/src/components/MainHeader.js",["165"],"import React from 'react'\nimport styled from 'styled-components'\n\nimport { Container } from 'components/UI'\nimport { headerFill, header } from 'context/responsive/cssSizes'\nimport logo from 'assets/logo.png'\n\nconst Sticker = styled.header`\n    position: sticky;\n    top: 0;\n    z-index: 10;\n`\nconst HeaderWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center\n\n    height: ${p => p.height};\n    width: 100%;\n    \n    background-color: ${props => props.theme.colors.headerBackground};\n    border-bottom: .1rem solid ${props => props.theme.colors.border};\n    \n`\nconst Filler = styled.div`\n    height: ${p => p.height};\n    width: 100%;\n    z-index: 10;\n`\nconst StyledImg = styled.img`\n    display: block;\n    margin: auto;\n`\n\nexport default function MainHeader() {\n    return (\n        <Sticker>\n            <HeaderWrapper height={header}>\n                <StyledImg src={logo} alt=\"logo\" />\n            </HeaderWrapper>\n            <Filler height={headerFill}/>\n        </Sticker>\n    )\n}","/home/dninja/Projects/github/otrust/src/components/UI/Button.js",[],"/home/dninja/Projects/github/otrust/src/lib/use-async-fn.js",[],"/home/dninja/Projects/github/otrust/src/context/SwapContext.js",["166"],"/home/dninja/Projects/github/otrust/src/utils/bonding.js",["167"],"\nconst a = 100000000\nconst priceBondCurve = .001\n\n// Bonding curve price at specified supply\nexport function supplyAtPrice(price) {\n    //#NOM Sold = sqrt(ETH/NOM) * a\n    return Math.sqrt(price) * a\n}\n\nexport function priceAtSupply(supply) {\n    return (supply/a)**2\n}\n\n// NOM supply range to ETH\nexport function NOMsupplyETH(supplyTop, supplyBot) {\n    // Integrate over curve to get amount of ETH needed to buy amount of NOM\n    // ETH = a/3((supplyNOM_Top/a)^3 - (supplyNOM_Bot/a)^3)\n    return (a/3)*((supplyTop/a)**3 - (supplyBot/a)**3)\n}\n\n// Returns Buy Quote for the purchase of NOM based on amount of ETH\n// Parameters:\n// Input\n// amount: amount of ETH\n// Output\n// output: amount of NOM\nexport function ETHtoNOM(amount, supply) {\n    const price = priceAtSupply(supply)\n    // 1. Determine supply bottom\n    // Price bottom is 1% above priceBondCurve\n    const priceBot = price * 1.01\n    const supplyBot = supplyAtPrice(priceBot);\n    // 2. Integrate over curve, and solve for supply top\n    // (3*ETH/a + (supplyNOM_Bot/a)^3)^(1/3)\n    const supplyTop = a*(3*amount/a + supplyBot**3/a**3)**(1/3)\n    console.log(\"supply top: \", supplyTop)\n    // 3. Subtract supply bottom from top to get amount NOM for amount ETH\n    const diff = supplyTop - supplyBot\n    console.log(\"diff\", diff)\n    return { supplyBot, supplyTop, diff }\n}\n\n// Returns Sell Quote: NOM for ETH (Dec 18)\n// Parameters:\n// Input\n// uint256 amountNOM: amount of NOM to be sold (18 decimal)\n// Output\n// uint256: amount of ETH paid in Wei or ETH (18 decimal)\nexport function NOMtoETH(amount, supply) {\n    const price = priceAtSupply(supply)\n    // 1. Determine supply top: priceBondCurve - 1% = Top Sale Price\n    const priceTop = price*(.99)\n    const supplyTop = supplyAtPrice(priceTop);\n    const supplyBot = supplyTop - amount;\n    // 2. Integrate over curve to find ETH\n    // ETH = a/3((supplyNOM_Top/a)^3 - (supplyNOM_Bot/a)^3)\n    console.log(\"Supply Top: \", supplyTop)\n    console.log(\"Supply Bot: \", supplyBot)\n    const diff = NOMsupplyETH(supplyTop, supplyBot)\n    return { supplyBot, supplyTop, diff}\n}","/home/dninja/Projects/github/otrust/src/context/chain/ChainContext.js",["168"],"/home/dninja/Projects/github/otrust/src/context/Web3Context.js",["169"],"/home/dninja/Projects/github/otrust/src/context/chain/contracts.js",["170"],"import { Contract } from \"@ethersproject/contracts\";\nconst NomContractJSON = require('./ERC20NOM.json')\nconst BondingContractJSON = require('./BondingNOM.json')\n\nexport const contAddrs = require('./NOMAddrs.json')\n\n/**\n * NOM ERC20 Contract instance\n */\nexport function NOMCont(library) {\n  const ABI = NomContractJSON.abi\n  return new Contract(contAddrs.NOMERC20, NomContractJSON.abi, library.getSigner())\n}\n\n/**\n * Haven Contract instance\n */\nexport function BondingCont(library) {\n  const ABI = BondingContractJSON.abi\n  return new Contract(contAddrs.BondingNOM, ABI, library.getSigner())\n}\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":21,"column":6,"nodeType":"177","endLine":21,"endColumn":16,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":60,"column":26,"nodeType":"180","endLine":60,"endColumn":89},{"ruleId":"181","severity":1,"message":"182","line":10,"column":10,"nodeType":"183","messageId":"184","endLine":10,"endColumn":21},{"ruleId":"175","severity":1,"message":"185","line":98,"column":81,"nodeType":"177","endLine":98,"endColumn":83,"suggestions":"186"},{"ruleId":"175","severity":1,"message":"187","line":101,"column":25,"nodeType":"183","endLine":101,"endColumn":36},{"ruleId":"188","severity":1,"message":"189","line":106,"column":27,"nodeType":"180","messageId":"190","endLine":106,"endColumn":29},{"ruleId":"181","severity":1,"message":"191","line":109,"column":27,"nodeType":"183","messageId":"184","endLine":109,"endColumn":35},{"ruleId":"181","severity":1,"message":"192","line":118,"column":23,"nodeType":"183","messageId":"184","endLine":118,"endColumn":27},{"ruleId":"181","severity":1,"message":"193","line":119,"column":23,"nodeType":"183","messageId":"184","endLine":119,"endColumn":27},{"ruleId":"181","severity":1,"message":"194","line":132,"column":33,"nodeType":"183","messageId":"184","endLine":132,"endColumn":38},{"ruleId":"188","severity":1,"message":"189","line":170,"column":41,"nodeType":"180","messageId":"190","endLine":170,"endColumn":43},{"ruleId":"181","severity":1,"message":"182","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":21},{"ruleId":"181","severity":1,"message":"195","line":6,"column":3,"nodeType":"183","messageId":"184","endLine":6,"endColumn":8},{"ruleId":"181","severity":1,"message":"196","line":11,"column":3,"nodeType":"183","messageId":"184","endLine":11,"endColumn":6},{"ruleId":"175","severity":1,"message":"197","line":146,"column":6,"nodeType":"177","endLine":146,"endColumn":42,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"199","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"199","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"171","replacedBy":"200"},{"ruleId":"173","replacedBy":"201"},{"ruleId":"181","severity":1,"message":"202","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":19},{"ruleId":"175","severity":1,"message":"203","line":49,"column":7,"nodeType":"177","endLine":49,"endColumn":44,"suggestions":"204"},{"ruleId":"181","severity":1,"message":"205","line":3,"column":7,"nodeType":"183","messageId":"184","endLine":3,"endColumn":21},{"ruleId":"175","severity":1,"message":"206","line":48,"column":8,"nodeType":"177","endLine":48,"endColumn":10,"suggestions":"207"},{"ruleId":"175","severity":1,"message":"208","line":59,"column":7,"nodeType":"177","endLine":59,"endColumn":9,"suggestions":"209"},{"ruleId":"181","severity":1,"message":"210","line":11,"column":9,"nodeType":"183","messageId":"184","endLine":11,"endColumn":12},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["213"],"Assignments to the 'upperBound' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","no-unused-vars","'formatEther' is defined but never used.","Identifier","unusedVar","React Hook useCallback has a missing dependency: 'setSwapBuyAmount'. Either include it or remove the dependency array.",["214"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'response' is assigned a value but never used.","'res1' is assigned a value but never used.","'res2' is assigned a value but never used.","'error' is assigned a value but never used.","'curve' is defined but never used.","'max' is defined but never used.","React Hook useEffect has missing dependencies: 'areaData', 'margin.bottom', 'margin.left', 'margin.right', and 'margin.top'. Either include them or remove the dependency array.",["215"],"'React' is defined but never used.",["211"],["212"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'swapSellAmount'. Either include it or remove the dependency array.",["216"],"'priceBondCurve' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'NOMcontract', 'account', 'bondContract', and 'library'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'initWeb3'. Either include it or remove the dependency array.",["218"],"'ABI' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [activate, active]",{"range":"231","text":"232"},"Update the dependencies array to be: [setSwapBuyAmount]",{"range":"233","text":"234"},"Update the dependencies array to be: [areaData, currentZoomState, data, dimensions, margin.bottom, margin.left, margin.right, margin.top]",{"range":"235","text":"236"},"Update the dependencies array to be: [swapDenom, swapBuyAmount, supplyNOM, swapSellAmount]",{"range":"237","text":"238"},"Update the dependencies array to be: [NOMcontract, account, bondContract, library]",{"range":"239","text":"240"},"Update the dependencies array to be: [initWeb3]",{"range":"241","text":"242"},[577,587],"[activate, active]",[2496,2498],"[setSwapBuyAmount]",[3596,3632],"[areaData, currentZoomState, data, dimensions, margin.bottom, margin.left, margin.right, margin.top]",[1666,1703],"[swapDenom, swapBuyAmount, supplyNOM, swapSellAmount]",[1791,1793],"[NOMcontract, account, bondContract, library]",[1782,1784],"[initWeb3]"]